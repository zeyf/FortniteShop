{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ZainY\\\\Documents\\\\fortniteitemshop\\\\fortniteapp\\\\src\\\\components\\\\Item\\\\ItemDetailsSection\\\\Item Details Components\\\\Item Set\\\\ItemSet.js\",\n    _s = $RefreshSig$();\n\nimport ItemContext from '../../../../context/ItemContext/ItemContext';\nimport './ItemSet.css';\nimport { useEffect, useContext } from 'react';\n\nconst ItemSet = () => {\n  _s();\n\n  const iContext = useContext(ItemContext);\n  const SetFunctions = {\n    GetSet: () => {\n      if (iContext.item) {\n        if (iContext.item.set) {\n          const {\n            value\n          } = iContext.item.set;\n          iContext.GetItemSet(value);\n        }\n      }\n    },\n    SetInfo: {\n      CardStyle: () => {},\n      SetName: () => {\n        if (iContext.item) {\n          if (iContext.item.set) {\n            const {\n              value\n            } = iContext.item.set;\n            return value.toUpperCase();\n          }\n        }\n      },\n      SetLength: () => {\n        if (iContext.item) {\n          if (iContext.ItemsOfSameSet) {\n            return iContext.ItemsOfSameSet.length;\n          }\n        }\n      },\n      SetImages: () => {\n        if (iContext.item) {\n          if (iContext.ItemsOfSameSet) {\n            const Images = iContext.ItemsOfSameSet.map((item, i) => {\n              if (item.images.featured) {\n                return item.images.featured;\n              } else {\n                return item.images.icon;\n              }\n            });\n            return Images;\n          }\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    SetFunctions.GetSet();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itemsetsection itemsetsection--primary\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"itemsetsection__head\",\n      children: [\"PART OF THE \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#ffe227'\n        },\n        children: SetFunctions.SetInfo.SetName()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }, this), \" SET\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemset itemset--primary\",\n      children: iContext.ItemsOfSameSet && SetFunctions.SetInfo.SetImages().map((item, i) => {\n        if (i < 4) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setitemcard setitemcard--primary\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item[i],\n              className: \"setitemcard__image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ItemSet, \"DCZTbjMjmVoigI8k0lBdNmKJvXU=\");\n\n_c = ItemSet;\nexport default ItemSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemSet\");","map":{"version":3,"sources":["C:/Users/ZainY/Documents/fortniteitemshop/fortniteapp/src/components/Item/ItemDetailsSection/Item Details Components/Item Set/ItemSet.js"],"names":["ItemContext","useEffect","useContext","ItemSet","iContext","SetFunctions","GetSet","item","set","value","GetItemSet","SetInfo","CardStyle","SetName","toUpperCase","SetLength","ItemsOfSameSet","length","SetImages","Images","map","i","images","featured","icon","color"],"mappings":"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","sourcesContent":["import ItemContext from '../../../../context/ItemContext/ItemContext'\r\nimport './ItemSet.css'\r\nimport {useEffect, useContext} from 'react';\r\n\r\nconst ItemSet = () => {\r\n\r\n    const iContext = useContext(ItemContext);\r\n\r\n\r\n\r\n    const SetFunctions = {\r\n\r\n        GetSet: () => {\r\n            if (iContext.item) {\r\n                if (iContext.item.set) {\r\n                    const {value} = iContext.item.set;    \r\n                    iContext.GetItemSet(value);\r\n                }\r\n            }\r\n        },\r\n        SetInfo: {\r\n            CardStyle: () => {\r\n                \r\n            },\r\n            SetName: () => {\r\n                if (iContext.item) {\r\n                    if (iContext.item.set) {\r\n                        const {value} = iContext.item.set;    \r\n                        return value.toUpperCase()\r\n                    }\r\n                }\r\n            },\r\n            SetLength: () => {\r\n                if (iContext.item) {\r\n                    if (iContext.ItemsOfSameSet) {\r\n   \r\n                        return iContext.ItemsOfSameSet.length;\r\n                    }\r\n                }\r\n            },\r\n            SetImages: () => {\r\n                if (iContext.item) {\r\n                    if (iContext.ItemsOfSameSet) {\r\n                        const Images = iContext.ItemsOfSameSet.map((item, i) => {\r\n                            if (item.images.featured) {\r\n                                return item.images.featured;\r\n                            } else {\r\n                                return item.images.icon;\r\n                            }\r\n                        })\r\n\r\n                        return Images\r\n                    }\r\n                }\r\n            },\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        SetFunctions.GetSet();\r\n    }, [])\r\n\r\n    return (\r\n        <div className='itemsetsection itemsetsection--primary'>\r\n            <h2 className=\"itemsetsection__head\">\r\n                PART OF THE <span style={{color: '#ffe227'}}>{SetFunctions.SetInfo.SetName()}</span> SET\r\n            </h2>\r\n            <div className=\"itemset itemset--primary\">\r\n                {iContext.ItemsOfSameSet && SetFunctions.SetInfo.SetImages().map((item, i) => {\r\n\r\n                    if (i < 4) {\r\n\r\n                        return  <div className='setitemcard setitemcard--primary'>\r\n                                <img src={item[i]} className='setitemcard__image' />\r\n                            </div>\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default ItemSet;"]},"metadata":{},"sourceType":"module"}