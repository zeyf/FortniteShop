{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ZainY\\\\Documents\\\\fortniteitemshop\\\\fortniteapp\\\\src\\\\components\\\\context\\\\SetContext\\\\SetState.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport SetReducer from './SetReducer';\nimport SetContext from './SetContext';\nimport { SET_LOADING, GET_SET, SET_NAME } from '../types';\nimport axios from 'axios';\n\nconst SetState = props => {\n  _s();\n\n  const InitialState = {\n    SetInfo: null,\n    SetName: null,\n    loading: false,\n    CardRarityStyles: {\n      uncommon: {\n        background: 'radial-gradient(rgb(105, 187, 30), rgb(23, 81, 23))',\n        border: '3px solid rgb(135, 227, 57)'\n      },\n      epic: {\n        background: 'radial-gradient(rgb(195, 89, 255), rgb(75, 36, 131))',\n        border: '3px solid #e95eff'\n      },\n      rare: {\n        background: 'radial-gradient(rgb(44, 193, 255), rgb(20, 57, 119))',\n        border: '3px solid rgb(55, 209, 255)'\n      },\n      iconseries: {\n        background: 'radial-gradient(rgb(54, 183, 183), rgb(37, 107, 107))',\n        border: '3px solid rgb(82, 224, 224)'\n      },\n      slurpseries: {\n        background: 'radial-gradient(rgb(41, 241, 163), rgb(18, 169, 164))',\n        border: '3px solid #53f0ff'\n      },\n      dark: {\n        background: 'radial-gradient(rgb(251, 34, 223), rgb(82, 12, 111))',\n        border: '3px solid rgb(255, 66, 231)'\n      },\n      legendary: {\n        background: 'radial-gradient(rgb(234, 141, 35), rgb(120, 55, 29))',\n        border: '3px solid rgb(233, 141, 75)'\n      }\n    }\n  };\n  const [state, dispatch] = useReducer(SetReducer, InitialState);\n\n  const SetLoading = () => {\n    dispatch({\n      type: SET_LOADING\n    });\n  };\n\n  const GetSet = async setname => {\n    const NameCharacterHandler = () => {\n      // handles names with dashes (which are passed in with ~ instead)\n      const dashregex = /-/gi;\n      const tilderegex = /~/gi;\n\n      if (dashregex.test(setname) === true && tilderegex.test(setname) === false) {\n        const NameDashResult = setname.replaceAll(dashregex, ' ');\n        return NameDashResult.toUpperCase();\n      } else if (tilderegex.test(setname) === true && dashregex.test(setname) === false) {\n        const NameTildeResult = setname.replaceAll(tilderegex, '-');\n        return NameTildeResult.toUpperCase();\n      } else if (tilderegex.test(setname) === true && dashregex.test(setname) === true) {\n        const replacedash = setname.replaceAll(dashregex, ' ');\n        const replacetilde = replacedash.replaceAll(tilderegex, '-');\n        return replacetilde.toUpperCase();\n      } else if (tilderegex.test(setname) === false && dashregex.test(setname) === false) {\n        return setname.toUpperCase();\n      }\n    };\n\n    const response = await axios.get(`https://fortnite-api.com/v2/cosmetics/br/search/all?set=${NameCharacterHandler()}`);\n    dispatch({\n      type: GET_SET,\n      payload: response.data.data\n    });\n    dispatch({\n      type: SET_NAME,\n      payload: NameCharacterHandler().toUpperCase()\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SetContext.Provider, {\n    value: {\n      SetInfo: state.SetInfo,\n      SetName: state.SetName,\n      loading: state.loading,\n      CardRarityStyles: state.CardRarityStyles,\n      GetSet\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 12\n  }, this);\n};\n\n_s(SetState, \"t2YXRAGqQS0gK432FYC+SFA/j9s=\");\n\n_c = SetState;\nexport default SetState;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetState\");","map":{"version":3,"sources":["C:/Users/ZainY/Documents/fortniteitemshop/fortniteapp/src/components/context/SetContext/SetState.js"],"names":["useReducer","SetReducer","SetContext","SET_LOADING","GET_SET","SET_NAME","axios","SetState","props","InitialState","SetInfo","SetName","loading","CardRarityStyles","uncommon","background","border","epic","rare","iconseries","slurpseries","dark","legendary","state","dispatch","SetLoading","type","GetSet","setname","NameCharacterHandler","dashregex","tilderegex","test","NameDashResult","replaceAll","toUpperCase","NameTildeResult","replacedash","replacetilde","response","get","payload","data","children"],"mappings":";;;;;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,WAAR,EAAqBC,OAArB,EAA8BC,QAA9B,QAA6C,UAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,OAAO,EAAE,IADQ;AAEjBC,IAAAA,OAAO,EAAE,IAFQ;AAGjBC,IAAAA,OAAO,EAAE,KAHQ;AAIjBC,IAAAA,gBAAgB,EAAE;AACdC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,UAAU,EAAE,qDADN;AAENC,QAAAA,MAAM,EAAE;AAFF,OADI;AAKdC,MAAAA,IAAI,EAAE;AACFF,QAAAA,UAAU,EAAE,sDADV;AAEFC,QAAAA,MAAM,EAAE;AAFN,OALQ;AASdE,MAAAA,IAAI,EAAE;AACFH,QAAAA,UAAU,EAAE,sDADV;AAEFC,QAAAA,MAAM,EAAE;AAFN,OATQ;AAadG,MAAAA,UAAU,EAAE;AACRJ,QAAAA,UAAU,EAAE,uDADJ;AAERC,QAAAA,MAAM,EAAE;AAFA,OAbE;AAiBdI,MAAAA,WAAW,EAAE;AACTL,QAAAA,UAAU,EAAE,uDADH;AAETC,QAAAA,MAAM,EAAE;AAFC,OAjBC;AAqBdK,MAAAA,IAAI,EAAE;AACFN,QAAAA,UAAU,EAAE,sDADV;AAEFC,QAAAA,MAAM,EAAE;AAFN,OArBQ;AAyBdM,MAAAA,SAAS,EAAE;AACPP,QAAAA,UAAU,EAAE,sDADL;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAzBG;AAJD,GAArB;AAoCA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBxB,UAAU,CAACC,UAAD,EAAaQ,YAAb,CAApC;;AAEA,QAAMgB,UAAU,GAAG,MAAM;AACrBD,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEvB;AAAP,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMwB,MAAM,GAAG,MAAOC,OAAP,IAAmB;AAC9B,UAAMC,oBAAoB,GAAG,MAAM;AAC/B;AACA,YAAMC,SAAS,GAAG,KAAlB;AACA,YAAMC,UAAU,GAAG,KAAnB;;AACA,UAAID,SAAS,CAACE,IAAV,CAAeJ,OAAf,MAA4B,IAA5B,IAAoCG,UAAU,CAACC,IAAX,CAAgBJ,OAAhB,MAA6B,KAArE,EAA4E;AACxE,cAAMK,cAAc,GAAGL,OAAO,CAACM,UAAR,CAAmBJ,SAAnB,EAA8B,GAA9B,CAAvB;AACA,eAAOG,cAAc,CAACE,WAAf,EAAP;AACH,OAHD,MAGO,IAAIJ,UAAU,CAACC,IAAX,CAAgBJ,OAAhB,MAA6B,IAA7B,IAAqCE,SAAS,CAACE,IAAV,CAAeJ,OAAf,MAA4B,KAArE,EAA4E;AAC/E,cAAMQ,eAAe,GAAGR,OAAO,CAACM,UAAR,CAAmBH,UAAnB,EAA+B,GAA/B,CAAxB;AACA,eAAOK,eAAe,CAACD,WAAhB,EAAP;AACH,OAHM,MAGA,IAAIJ,UAAU,CAACC,IAAX,CAAgBJ,OAAhB,MAA6B,IAA7B,IAAqCE,SAAS,CAACE,IAAV,CAAeJ,OAAf,MAA4B,IAArE,EAA2E;AAC9E,cAAMS,WAAW,GAAGT,OAAO,CAACM,UAAR,CAAmBJ,SAAnB,EAA8B,GAA9B,CAApB;AACA,cAAMQ,YAAY,GAAGD,WAAW,CAACH,UAAZ,CAAuBH,UAAvB,EAAmC,GAAnC,CAArB;AACA,eAAOO,YAAY,CAACH,WAAb,EAAP;AACH,OAJM,MAIA,IAAIJ,UAAU,CAACC,IAAX,CAAgBJ,OAAhB,MAA6B,KAA7B,IAAsCE,SAAS,CAACE,IAAV,CAAeJ,OAAf,MAA4B,KAAtE,EAA6E;AAChF,eAAOA,OAAO,CAACO,WAAR,EAAP;AACH;AACJ,KAjBD;;AAkBA,UAAMI,QAAQ,GAAG,MAAMjC,KAAK,CAACkC,GAAN,CAAW,2DAA0DX,oBAAoB,EAAG,EAA5F,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEtB,OADD;AAELqC,MAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcA;AAFlB,KAAD,CAAR;AAIAlB,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAErB,QADD;AAELoC,MAAAA,OAAO,EAAEZ,oBAAoB,GAAGM,WAAvB;AAFJ,KAAD,CAAR;AAIH,GA7BD;;AA+BA,sBAAO,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAE/BzB,MAAAA,OAAO,EAAEa,KAAK,CAACb,OAFgB;AAG/BC,MAAAA,OAAO,EAAEY,KAAK,CAACZ,OAHgB;AAI/BC,MAAAA,OAAO,EAAEW,KAAK,CAACX,OAJgB;AAK/BC,MAAAA,gBAAgB,EAAEU,KAAK,CAACV,gBALO;AAM/Bc,MAAAA;AAN+B,KAA5B;AAAA,cASMnB,KAAK,CAACmC;AATZ;AAAA;AAAA;AAAA;AAAA,UAAP;AAWH,CAtFD;;GAAMpC,Q;;KAAAA,Q;AAyFN,eAAeA,QAAf","sourcesContent":["import {useReducer} from 'react';\r\nimport SetReducer from './SetReducer';\r\nimport SetContext from './SetContext';\r\nimport {SET_LOADING, GET_SET, SET_NAME} from '../types';\r\nimport axios from 'axios';\r\n\r\nconst SetState = (props) => {\r\n\r\n    const InitialState = {\r\n        SetInfo: null,\r\n        SetName: null,\r\n        loading: false,\r\n        CardRarityStyles: {\r\n            uncommon: {\r\n                background: 'radial-gradient(rgb(105, 187, 30), rgb(23, 81, 23))',\r\n                border: '3px solid rgb(135, 227, 57)'\r\n            },\r\n            epic: {\r\n                background: 'radial-gradient(rgb(195, 89, 255), rgb(75, 36, 131))',\r\n                border: '3px solid #e95eff'\r\n            },\r\n            rare: {\r\n                background: 'radial-gradient(rgb(44, 193, 255), rgb(20, 57, 119))',\r\n                border: '3px solid rgb(55, 209, 255)'\r\n            },\r\n            iconseries: {\r\n                background: 'radial-gradient(rgb(54, 183, 183), rgb(37, 107, 107))',\r\n                border: '3px solid rgb(82, 224, 224)'\r\n            },\r\n            slurpseries: {\r\n                background: 'radial-gradient(rgb(41, 241, 163), rgb(18, 169, 164))',\r\n                border: '3px solid #53f0ff'   \r\n            },\r\n            dark: {\r\n                background: 'radial-gradient(rgb(251, 34, 223), rgb(82, 12, 111))',\r\n                border: '3px solid rgb(255, 66, 231)'\r\n            },\r\n            legendary: {\r\n                background: 'radial-gradient(rgb(234, 141, 35), rgb(120, 55, 29))',\r\n                border: '3px solid rgb(233, 141, 75)'\r\n            }\r\n        }\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(SetReducer, InitialState);\r\n\r\n    const SetLoading = () => {\r\n        dispatch({type: SET_LOADING});\r\n    }\r\n\r\n    const GetSet = async (setname) => {\r\n        const NameCharacterHandler = () => {\r\n            // handles names with dashes (which are passed in with ~ instead)\r\n            const dashregex = /-/gi;\r\n            const tilderegex = /~/gi;\r\n            if (dashregex.test(setname) === true && tilderegex.test(setname) === false) {\r\n                const NameDashResult = setname.replaceAll(dashregex, ' ')\r\n                return NameDashResult.toUpperCase();\r\n            } else if (tilderegex.test(setname) === true && dashregex.test(setname) === false) {\r\n                const NameTildeResult = setname.replaceAll(tilderegex, '-')\r\n                return NameTildeResult.toUpperCase();\r\n            } else if (tilderegex.test(setname) === true && dashregex.test(setname) === true) {\r\n                const replacedash = setname.replaceAll(dashregex, ' ')\r\n                const replacetilde = replacedash.replaceAll(tilderegex, '-');\r\n                return replacetilde.toUpperCase();\r\n            } else if (tilderegex.test(setname) === false && dashregex.test(setname) === false) {\r\n                return setname.toUpperCase();\r\n            }\r\n        }\r\n        const response = await axios.get(`https://fortnite-api.com/v2/cosmetics/br/search/all?set=${NameCharacterHandler()}`)\r\n\r\n        dispatch({\r\n            type: GET_SET,\r\n            payload: response.data.data\r\n        })\r\n        dispatch({\r\n            type: SET_NAME,\r\n            payload: NameCharacterHandler().toUpperCase()\r\n        })\r\n    }\r\n\r\n    return <SetContext.Provider value={{\r\n\r\n        SetInfo: state.SetInfo,\r\n        SetName: state.SetName,\r\n        loading: state.loading,\r\n        CardRarityStyles: state.CardRarityStyles,\r\n        GetSet\r\n        \r\n            }}>\r\n                {props.children}\r\n            </SetContext.Provider>\r\n}\r\n\r\n\r\nexport default SetState"]},"metadata":{},"sourceType":"module"}