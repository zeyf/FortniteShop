{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ZainY\\\\Documents\\\\fortniteitemshop\\\\fortniteapp\\\\src\\\\components\\\\Shop\\\\ShopSections\\\\DailyShopSection\\\\DailyShopSection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useContext } from 'react';\nimport ShopContext from '../../../context/ShopContext/ShopContext';\nimport ShopItemCard from '../../ShopItemCard/ShopItemCard';\nimport './DailyShopSection.css';\n\nconst DailyShopSection = () => {\n  _s();\n\n  const sContext = useContext(ShopContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dailyview dailyview--primary\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"dailyview__head viewhead\",\n      children: \"DAILY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dailyitemsection dailyitemsection--primary\",\n      children: sContext.CurrentDaily && sContext.CurrentDaily.dailyItemItemsImages.map((item, i) => {\n        const BundleCheck = {\n          BundleName: () => {\n            if (sContext.CurrentDaily.dailyItemBundleStatus) {\n              const nameslist = sContext.CurrentDaily.dailyItemBundleStatus.map((current, pos) => {\n                if (current) {\n                  return current.name;\n                } else {\n                  return current;\n                }\n              });\n              return nameslist;\n            }\n          },\n          BundleImage: () => {\n            if (sContext.CurrentDaily.dailyItemBundleStatus) {\n              const imagelist = sContext.CurrentDaily.dailyItemBundleStatus.map((curr, pos) => {\n                if (curr) {\n                  return curr.image;\n                } else {\n                  return curr;\n                }\n              });\n              return imagelist;\n            }\n          }\n        };\n        console.log(BundleCheck.BundleName());\n        const price = sContext.CurrentDaily && sContext.CurrentDaily.dailyItemfinalPrices.map((current, i) => {\n          return current;\n        });\n        const id = sContext.CurrentDaily && sContext.CurrentDaily.dailyItemItemsIDs.map((current, i) => {\n          if (typeof current[0] === 'object') return String(current[0]);else {\n            return current[0];\n          }\n        });\n        const rarity = sContext.CurrentDaily && sContext.CurrentDaily.dailyItemItemsRarity.map((current, i) => {\n          const raritytype = current[0];\n\n          if (raritytype === 'Uncommon') {\n            return sContext.CardRarityStyles.uncommon;\n          } else if (raritytype === 'Epic') {\n            return sContext.CardRarityStyles.epic;\n          } else if (raritytype === 'Rare') {\n            return sContext.CardRarityStyles.rare;\n          } else if (raritytype === 'Icon Series') {\n            return sContext.CardRarityStyles.iconseries;\n          } else if (raritytype === 'Slurp Series') {\n            return sContext.CardRarityStyles.slurpseries;\n          } else if (raritytype === 'DARK SERIES') {\n            return sContext.CardRarityStyles.dark;\n          } else if (raritytype === 'Legendary') {\n            return sContext.CardRarityStyles.legendary;\n          }\n        });\n        const name = sContext.CurrentDaily && sContext.CurrentDaily.dailyItemItemsNames.map((current, i) => {\n          return current[0];\n        });\n\n        if (item.length > 1) {\n          return /*#__PURE__*/_jsxDEV(ShopItemCard, {\n            price: price[i],\n            image: BundleCheck.BundleImage()[i] ? BundleCheck.BundleImage()[i] : item[0],\n            id: id[i],\n            cardstyle: rarity[i],\n            name: BundleCheck.BundleName()[i] ? BundleCheck.BundleName()[i] : name[i]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 36\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(ShopItemCard, {\n            price: price[i],\n            image: BundleCheck.BundleImage()[i] ? BundleCheck.BundleImage()[i] : item,\n            id: id[i],\n            cardstyle: rarity[i],\n            name: BundleCheck.BundleName()[i] ? BundleCheck.BundleName()[i] : name[i]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 36\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DailyShopSection, \"45FF8d9se3/9fc9tbEEEIqxvvdI=\");\n\n_c = DailyShopSection;\nexport default DailyShopSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyShopSection\");","map":{"version":3,"sources":["C:/Users/ZainY/Documents/fortniteitemshop/fortniteapp/src/components/Shop/ShopSections/DailyShopSection/DailyShopSection.js"],"names":["React","useContext","ShopContext","ShopItemCard","DailyShopSection","sContext","CurrentDaily","dailyItemItemsImages","map","item","i","BundleCheck","BundleName","dailyItemBundleStatus","nameslist","current","pos","name","BundleImage","imagelist","curr","image","console","log","price","dailyItemfinalPrices","id","dailyItemItemsIDs","String","rarity","dailyItemItemsRarity","raritytype","CardRarityStyles","uncommon","epic","rare","iconseries","slurpseries","dark","legendary","dailyItemItemsNames","length"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {useContext} from 'react';\r\nimport ShopContext from '../../../context/ShopContext/ShopContext'\r\nimport ShopItemCard from '../../ShopItemCard/ShopItemCard';\r\nimport './DailyShopSection.css';\r\n\r\nconst DailyShopSection = () => {\r\n\r\n    const sContext = useContext(ShopContext);\r\n\r\n    return (\r\n        <div className='dailyview dailyview--primary'>\r\n            <p className='dailyview__head viewhead'>DAILY</p>\r\n            <div className='dailyitemsection dailyitemsection--primary'>\r\n                {sContext.CurrentDaily && sContext.CurrentDaily.dailyItemItemsImages.map((item, i) => {\r\n\r\n                        const BundleCheck = {\r\n                            BundleName: () => {\r\n                                if (sContext.CurrentDaily.dailyItemBundleStatus) {\r\n                                    const nameslist = sContext.CurrentDaily.dailyItemBundleStatus.map((current, pos) => {\r\n                                        \r\n                                        if (current) {\r\n                                            return current.name\r\n                                        } else {\r\n                                            return current\r\n                                        }\r\n                                    })\r\n                                    return nameslist\r\n                                }\r\n                            },\r\n                            BundleImage: () => {\r\n                                if (sContext.CurrentDaily.dailyItemBundleStatus) {\r\n                                    const imagelist = sContext.CurrentDaily.dailyItemBundleStatus.map((curr, pos) => {\r\n                                        if (curr) {\r\n                                            return curr.image\r\n                                        } else {\r\n                                            return curr\r\n                                        }\r\n                                    })\r\n                                    return imagelist\r\n                                }\r\n                            }\r\n                        }\r\n                        console.log(BundleCheck.BundleName())\r\n\r\n\r\n                        const price = sContext.CurrentDaily && sContext.CurrentDaily.dailyItemfinalPrices.map((current, i) => {\r\n                            return current;\r\n                        });\r\n                        \r\n                        const id = sContext.CurrentDaily && sContext.CurrentDaily.dailyItemItemsIDs.map((current, i) => {\r\n                            if (typeof(current[0]) === 'object')\r\n                                return String(current[0]);\r\n                            else {\r\n                                return current[0]\r\n                            }\r\n                        });\r\n                        const rarity = sContext.CurrentDaily && sContext.CurrentDaily.dailyItemItemsRarity.map((current, i) => {\r\n                            \r\n                            const raritytype = current[0];\r\n                            \r\n                            if(raritytype === 'Uncommon') {\r\n                                return sContext.CardRarityStyles.uncommon;\r\n                            } else if (raritytype === 'Epic') {\r\n                                return sContext.CardRarityStyles.epic;\r\n                            } else if (raritytype === 'Rare') {\r\n                                return sContext.CardRarityStyles.rare;\r\n                            } else if (raritytype === 'Icon Series') {\r\n                                return sContext.CardRarityStyles.iconseries;\r\n                            } else if (raritytype === 'Slurp Series') {\r\n                                return sContext.CardRarityStyles.slurpseries;\r\n                            } else if (raritytype === 'DARK SERIES') {\r\n                                return sContext.CardRarityStyles.dark;\r\n                            } else if (raritytype === 'Legendary') {\r\n                                return sContext.CardRarityStyles.legendary;\r\n                            }\r\n                        });\r\n\r\n                        const name = sContext.CurrentDaily && sContext.CurrentDaily.dailyItemItemsNames.map((current, i) => {\r\n                            return current[0];\r\n                        });\r\n\r\n                        if (item.length > 1) {\r\n                            return <ShopItemCard price={price[i]} image={BundleCheck.BundleImage()[i] ? BundleCheck.BundleImage()[i] : item[0]} id={id[i]} cardstyle={rarity[i]} name={BundleCheck.BundleName()[i] ? BundleCheck.BundleName()[i]: name[i]} />\r\n                        } else {\r\n                            return <ShopItemCard price={price[i]} image={BundleCheck.BundleImage()[i] ? BundleCheck.BundleImage()[i] : item} id={id[i]} cardstyle={rarity[i]} name={BundleCheck.BundleName()[i] ? BundleCheck.BundleName()[i]: name[i]} />\r\n                        }   \r\n                    })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DailyShopSection\r\n"]},"metadata":{},"sourceType":"module"}