{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ZainY\\\\Documents\\\\fortniteitemshop\\\\fortniteapp\\\\src\\\\components\\\\Item\\\\ItemDetailsSection\\\\Item Details Components\\\\Item Set\\\\ItemSet.js\",\n    _s = $RefreshSig$();\n\nimport ItemContext from '../../../../context/ItemContext/ItemContext';\nimport './ItemSet.css';\nimport { useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ItemSet = () => {\n  _s();\n\n  const iContext = useContext(ItemContext);\n  const BoilerPlate = {\n    CardStyle: () => {\n      if (iContext.item) {\n        const itemrarity = iContext.item.rarity.displayValue;\n\n        if (itemrarity === 'Uncommon') {\n          return iContext.CardRarityStyles.uncommon;\n        } else if (itemrarity === 'Epic') {\n          return iContext.CardRarityStyles.epic;\n        } else if (itemrarity === 'Rare') {\n          return iContext.CardRarityStyles.rare;\n        } else if (itemrarity === 'Icon Series') {\n          return iContext.CardRarityStyles.iconseries;\n        } else if (itemrarity === 'Slurp Series') {\n          return iContext.CardRarityStyles.slurpseries;\n        } else if (itemrarity === 'DARK SERIES') {\n          return iContext.CardRarityStyles.dark;\n        } else if (itemrarity === 'Legendary') {\n          return iContext.CardRarityStyles.legendary;\n        }\n      }\n    },\n    SetLinkByIDType: () => {\n      if (iContext.item) {\n        if (iContext.ItemsOfSameSet) {\n          const itemtype = id.split('_')[0];\n\n          if (itemtype === 'CID') {\n            return iContext.ItemTypes.skin;\n          } else if (itemtype === 'EID') {\n            return iContext.ItemTypes.emote;\n          } else if (itemtype === 'MusicPack') {\n            return iContext.ItemTypes.musicpack;\n          } else if (itemtype === 'Pickaxe') {\n            return iContext.ItemTypes.pickaxe;\n          } else if (itemtype === 'Wrap') {\n            return iContext.ItemTypes.wrap;\n          } else if (itemtype === 'Glider') {\n            return iContext.ItemTypes.glider;\n          }\n        }\n      }\n    }\n  };\n  const SetFunctions = {\n    GetSet: () => {\n      if (iContext.item) {\n        if (iContext.item.set) {\n          const {\n            value\n          } = iContext.item.set;\n          iContext.GetItemSet(value);\n        }\n      }\n    },\n    SetInfo: {\n      CardStyle: () => {},\n      SetName: () => {\n        if (iContext.item) {\n          if (iContext.item.set) {\n            const {\n              value\n            } = iContext.item.set;\n            return value.toUpperCase();\n          }\n        }\n      },\n      SetLength: () => {\n        if (iContext.item) {\n          if (iContext.ItemsOfSameSet) {\n            return iContext.ItemsOfSameSet.length;\n          }\n        }\n      },\n      SetImages: () => {\n        if (iContext.item) {\n          if (iContext.ItemsOfSameSet) {\n            const Images = iContext.ItemsOfSameSet.map((item, i) => {\n              if (item.images.featured) {\n                return item.images.featured;\n              } else {\n                return item.images.icon;\n              }\n            });\n            return Images;\n          }\n        }\n      },\n      SetRarity: () => {\n        if (iContext.item) {\n          if (iContext.ItemsOfSameSet) {\n            const Rarity = iContext.ItemsOfSameSet.map((item, i) => {\n              const itemrarity = item.rarity.displayValue;\n              BoilerPlate.CardStyle();\n            });\n            return Rarity;\n          }\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    SetFunctions.GetSet();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itemsetsection itemsetsection--primary\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"itemsetsection__head\",\n      children: [\"PART OF THE \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#ffe227'\n        },\n        children: [SetFunctions.SetInfo.SetName(), \" SET\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }, this), \" (\", SetFunctions.SetInfo.SetLength(), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemset itemset--primary\",\n      children: iContext.ItemsOfSameSet && SetFunctions.SetInfo.SetImages().map((item, i) => {\n        if (i < 6) {\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: `/skins/${iContext.ItemsOfSameSet[i].name}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setitemcard setitemcard--primary\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item,\n                className: \"setitemcard__image\",\n                style: SetFunctions.SetInfo.SetRarity()[i]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ItemSet, \"DCZTbjMjmVoigI8k0lBdNmKJvXU=\");\n\n_c = ItemSet;\nexport default ItemSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemSet\");","map":{"version":3,"sources":["C:/Users/ZainY/Documents/fortniteitemshop/fortniteapp/src/components/Item/ItemDetailsSection/Item Details Components/Item Set/ItemSet.js"],"names":["ItemContext","useEffect","useContext","Link","ItemSet","iContext","BoilerPlate","CardStyle","item","itemrarity","rarity","displayValue","CardRarityStyles","uncommon","epic","rare","iconseries","slurpseries","dark","legendary","SetLinkByIDType","ItemsOfSameSet","itemtype","id","split","ItemTypes","skin","emote","musicpack","pickaxe","wrap","glider","SetFunctions","GetSet","set","value","GetItemSet","SetInfo","SetName","toUpperCase","SetLength","length","SetImages","Images","map","i","images","featured","icon","SetRarity","Rarity","color","name"],"mappings":"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","sourcesContent":["import ItemContext from '../../../../context/ItemContext/ItemContext'\r\nimport './ItemSet.css'\r\nimport {useEffect, useContext} from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ItemSet = () => {\r\n\r\n    const iContext = useContext(ItemContext);\r\n\r\n\r\n    const BoilerPlate = {\r\n        CardStyle: () => {\r\n            if (iContext.item) {\r\n                const itemrarity = iContext.item.rarity.displayValue;\r\n                \r\n                if(itemrarity === 'Uncommon') {\r\n                    return iContext.CardRarityStyles.uncommon;\r\n                } else if (itemrarity === 'Epic') {\r\n                    return iContext.CardRarityStyles.epic;\r\n                } else if (itemrarity === 'Rare') {\r\n                    return iContext.CardRarityStyles.rare;\r\n                } else if (itemrarity === 'Icon Series') {\r\n                    return iContext.CardRarityStyles.iconseries;\r\n                } else if (itemrarity === 'Slurp Series') {\r\n                    return iContext.CardRarityStyles.slurpseries;\r\n                } else if (itemrarity === 'DARK SERIES') {\r\n                    return iContext.CardRarityStyles.dark;\r\n                } else if (itemrarity === 'Legendary') {\r\n                    return iContext.CardRarityStyles.legendary;\r\n                }\r\n            }\r\n        },\r\n        SetLinkByIDType: () => {\r\n\r\n            if (iContext.item) {\r\n                if (iContext.ItemsOfSameSet) {\r\n\r\n                    const itemtype = id.split('_')[0];\r\n            \r\n                    if (itemtype === 'CID') {\r\n                        return iContext.ItemTypes.skin;\r\n                    } else if (itemtype === 'EID') {\r\n                        return iContext.ItemTypes.emote;\r\n                    } else if (itemtype === 'MusicPack') {\r\n                        return iContext.ItemTypes.musicpack;\r\n                    } else if (itemtype === 'Pickaxe') {\r\n                        return iContext.ItemTypes.pickaxe;\r\n                    } else if (itemtype === 'Wrap') {\r\n                        return iContext.ItemTypes.wrap;\r\n                    } else if (itemtype === 'Glider') {\r\n                        return iContext.ItemTypes.glider;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const SetFunctions = {\r\n\r\n        GetSet: () => {\r\n            if (iContext.item) {\r\n                if (iContext.item.set) {\r\n                    const {value} = iContext.item.set;    \r\n                    iContext.GetItemSet(value);\r\n                }\r\n            }\r\n        },\r\n        SetInfo: {\r\n            CardStyle: () => {\r\n                \r\n            },\r\n            SetName: () => {\r\n                if (iContext.item) {\r\n                    if (iContext.item.set) {\r\n                        const {value} = iContext.item.set;    \r\n                        return value.toUpperCase()\r\n                    }\r\n                }\r\n            },\r\n            SetLength: () => {\r\n                if (iContext.item) {\r\n                    if (iContext.ItemsOfSameSet) {\r\n   \r\n                        return iContext.ItemsOfSameSet.length;\r\n                    }\r\n                }\r\n            },\r\n            SetImages: () => {\r\n                if (iContext.item) {\r\n                    if (iContext.ItemsOfSameSet) {\r\n                        const Images = iContext.ItemsOfSameSet.map((item, i) => {\r\n                            if (item.images.featured) {\r\n                                return item.images.featured;\r\n                            } else {\r\n                                return item.images.icon;\r\n                            }\r\n                        })\r\n\r\n                        return Images\r\n                    }\r\n                }\r\n            },\r\n            SetRarity: () => {\r\n                if (iContext.item) {\r\n                    if (iContext.ItemsOfSameSet) {\r\n                        const Rarity = iContext.ItemsOfSameSet.map((item, i) => {\r\n                            \r\n                            const itemrarity = item.rarity.displayValue;\r\n                            \r\n                            BoilerPlate.CardStyle();\r\n                        })\r\n\r\n                        return Rarity;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        SetFunctions.GetSet();\r\n    }, [])\r\n\r\n    return (\r\n        <div className='itemsetsection itemsetsection--primary'>\r\n            <h2 className=\"itemsetsection__head\">\r\n                PART OF THE <span style={{color: '#ffe227'}}>{SetFunctions.SetInfo.SetName()} SET</span> ({SetFunctions.SetInfo.SetLength()})\r\n            </h2>\r\n            <div className=\"itemset itemset--primary\">\r\n                {iContext.ItemsOfSameSet && SetFunctions.SetInfo.SetImages().map((item, i) => {\r\n\r\n                    if (i < 6) {\r\n\r\n                        return  <Link to={`/skins/${iContext.ItemsOfSameSet[i].name}`}>\r\n                                    <div className='setitemcard setitemcard--primary'>\r\n                                        <img src={item} className='setitemcard__image' style={SetFunctions.SetInfo.SetRarity()[i]} />\r\n                                    </div>\r\n                                </Link>\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default ItemSet;"]},"metadata":{},"sourceType":"module"}