[{"D:\\React Projects\\FortniteShop\\src\\index.js":"1","D:\\React Projects\\FortniteShop\\src\\App.js":"2","D:\\React Projects\\FortniteShop\\src\\reportWebVitals.js":"3","D:\\React Projects\\FortniteShop\\src\\components\\Shop\\Shop.js":"4","D:\\React Projects\\FortniteShop\\src\\components\\Set\\Set.js":"5","D:\\React Projects\\FortniteShop\\src\\components\\context\\SetContext\\SetState.js":"6","D:\\React Projects\\FortniteShop\\src\\components\\Item\\Item.js":"7","D:\\React Projects\\FortniteShop\\src\\components\\context\\ShopContext\\ShopState.js":"8","D:\\React Projects\\FortniteShop\\src\\components\\context\\ItemContext\\ItemState.js":"9","D:\\React Projects\\FortniteShop\\src\\components\\layout\\navbar\\Navbar.js":"10","D:\\React Projects\\FortniteShop\\src\\components\\context\\ShopContext\\ShopContext.js":"11","D:\\React Projects\\FortniteShop\\src\\components\\context\\SetContext\\SetContext.js":"12","D:\\React Projects\\FortniteShop\\src\\components\\context\\ItemContext\\ItemContext.js":"13","D:\\React Projects\\FortniteShop\\src\\components\\context\\SetContext\\SetReducer.js":"14","D:\\React Projects\\FortniteShop\\src\\components\\context\\types.js":"15","D:\\React Projects\\FortniteShop\\src\\components\\context\\ShopContext\\ShopReducer.js":"16","D:\\React Projects\\FortniteShop\\src\\components\\context\\ItemContext\\ItemReducer.js":"17","D:\\React Projects\\FortniteShop\\src\\components\\layout\\spinner\\Spinner.js":"18","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\ItemDetailsSection.js":"19","D:\\React Projects\\FortniteShop\\src\\components\\Shop\\ShopSections\\FeaturedShopSection\\FeaturedShopSection.js":"20","D:\\React Projects\\FortniteShop\\src\\components\\Shop\\ShopSections\\DailyShopSection\\DailyShopSection.js":"21","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\Item Details Components\\Item Set\\ItemSet.js":"22","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\Item Details Components\\Item Card\\ItemCardSection.js":"23","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\Item Details Components\\Item Variants\\ItemVariants.js":"24","D:\\React Projects\\FortniteShop\\src\\components\\Shop\\ShopItemCard\\ShopItemCard.js":"25","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\Item Details Components\\Item Shop History\\ItemShopHistory.js":"26","D:\\React Projects\\FortniteShop\\src\\App Wide Functions\\ItemFunctions.js":"27","D:\\React Projects\\FortniteShop\\src\\App Wide Functions\\FormatFunctions.js":"28"},{"size":517,"mtime":1612986863694,"results":"29","hashOfConfig":"30"},{"size":1119,"mtime":1612986863658,"results":"31","hashOfConfig":"30"},{"size":375,"mtime":1612986863701,"results":"32","hashOfConfig":"30"},{"size":1067,"mtime":1612987415475,"results":"33","hashOfConfig":"30"},{"size":1161,"mtime":1612986863663,"results":"34","hashOfConfig":"30"},{"size":3650,"mtime":1612986863691,"results":"35","hashOfConfig":"30"},{"size":725,"mtime":1612988406990,"results":"36","hashOfConfig":"30"},{"size":5188,"mtime":1612987371490,"results":"37","hashOfConfig":"30"},{"size":2611,"mtime":1612987359933,"results":"38","hashOfConfig":"30"},{"size":789,"mtime":1612986863693,"results":"39","hashOfConfig":"30"},{"size":108,"mtime":1612986863691,"results":"40","hashOfConfig":"30"},{"size":107,"mtime":1612986863690,"results":"41","hashOfConfig":"30"},{"size":111,"mtime":1612986863669,"results":"42","hashOfConfig":"30"},{"size":643,"mtime":1612986863690,"results":"43","hashOfConfig":"30"},{"size":383,"mtime":1612986863692,"results":"44","hashOfConfig":"30"},{"size":791,"mtime":1612986863691,"results":"45","hashOfConfig":"30"},{"size":654,"mtime":1612986863669,"results":"46","hashOfConfig":"30"},{"size":243,"mtime":1612986863693,"results":"47","hashOfConfig":"30"},{"size":1028,"mtime":1612987279563,"results":"48","hashOfConfig":"30"},{"size":3625,"mtime":1612990049958,"results":"49","hashOfConfig":"30"},{"size":3423,"mtime":1612990293226,"results":"50","hashOfConfig":"30"},{"size":10416,"mtime":1612986863661,"results":"51","hashOfConfig":"30"},{"size":4566,"mtime":1612987324495,"results":"52","hashOfConfig":"30"},{"size":2666,"mtime":1612986863662,"results":"53","hashOfConfig":"30"},{"size":1549,"mtime":1612990285741,"results":"54","hashOfConfig":"30"},{"size":2534,"mtime":1612986863662,"results":"55","hashOfConfig":"30"},{"size":2852,"mtime":1612989276646,"results":"56","hashOfConfig":"30"},{"size":3011,"mtime":1612990149935,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"in7t7z",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React Projects\\FortniteShop\\src\\index.js",[],["122","123"],"D:\\React Projects\\FortniteShop\\src\\App.js",[],"D:\\React Projects\\FortniteShop\\src\\reportWebVitals.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\Shop\\Shop.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\Set\\Set.js",["124","125"],"import React, {useContext, useEffect} from 'react'\r\nimport SetContext from '../context/SetContext/SetContext';\r\nimport ItemSet from '../Item/ItemDetailsSection/Item Details Components/Item Set/ItemSet'\r\nimport Spinner from '../layout/spinner/Spinner';\r\n\r\nconst Set = ({match}) => {\r\n\r\n    const setContext = useContext(SetContext);\r\n    useEffect(() => {\r\n       setContext.GetSet(match.params.setname)\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    const {SetName, SetInfo, loading} = setContext;\r\n    return (\r\n\r\n        <div className='set set--primary'>\r\n            {loading ? <Spinner /> :  <>\r\n            <h2 className=\"set__head\">\r\n                THE <span style={{color: '#ffe227'}}>{SetName} SET</span> ({SetInfo && SetInfo.length})\r\n            </h2>\r\n            <div className=\"setcontainer setcontainer--primary\">\r\n                {SetInfo && SetInfo.map((item, i) => {\r\n                    \r\n                    return <img src={item.images.icon} style={{height: '150px', width: '150px'}} />\r\n                    \r\n                })}\r\n            </div>\r\n            </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Set\r\n","D:\\React Projects\\FortniteShop\\src\\components\\context\\SetContext\\SetState.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\Item\\Item.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\ShopContext\\ShopState.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\ItemContext\\ItemState.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\layout\\navbar\\Navbar.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\ShopContext\\ShopContext.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\SetContext\\SetContext.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\ItemContext\\ItemContext.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\SetContext\\SetReducer.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\types.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\ShopContext\\ShopReducer.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\ItemContext\\ItemReducer.js",["126"],"import {GET_ITEM, GET_ITEM_SET, SET_LOADING, RELOAD_COMPONENT} from '../types';\r\n\r\nconst ItemReducer = (state, action) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ITEM:\r\n            return {\r\n                ...state,\r\n                item: action.payload,\r\n                loading: false\r\n            }\r\n        case GET_ITEM_SET:\r\n            return {\r\n                ...state,\r\n                ItemsOfSameSet: action.payload\r\n            }\r\n    }\r\n}\r\nexport default ItemReducer;","D:\\React Projects\\FortniteShop\\src\\components\\layout\\spinner\\Spinner.js",["127"],"import React from 'react'\r\nimport InfinitySpinner from '../../../media/images/InfinityTeal.svg';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n       <>\r\n        <img src={InfinitySpinner} />\r\n       </>\r\n    )\r\n    \r\n}\r\n\r\nexport default Spinner\r\n","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\ItemDetailsSection.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\Shop\\ShopSections\\FeaturedShopSection\\FeaturedShopSection.js",["128","129"],"D:\\React Projects\\FortniteShop\\src\\components\\Shop\\ShopSections\\DailyShopSection\\DailyShopSection.js",["130"],"D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\Item Details Components\\Item Set\\ItemSet.js",["131","132","133"],"import ItemContext from '../../../../context/ItemContext/ItemContext'\r\nimport './ItemSet.css'\r\nimport {useEffect, useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst ItemSet = ({length}) => {\r\n\r\n    const iContext = useContext(ItemContext);\r\n\r\n    const BoilerPlate = {\r\n        CardStyle: () => {\r\n            if (iContext.item) {\r\n                const itemrarity = iContext.item.rarity.displayValue;\r\n                \r\n                if(itemrarity === 'Uncommon') {\r\n                    return iContext.CardRarityStyles.uncommon;\r\n                } else if (itemrarity === 'Epic') {\r\n                    return iContext.CardRarityStyles.epic;\r\n                } else if (itemrarity === 'Rare') {\r\n                    return iContext.CardRarityStyles.rare;\r\n                } else if (itemrarity === 'Icon Series') {\r\n                    return iContext.CardRarityStyles.iconseries;\r\n                } else if (itemrarity === 'Slurp Series') {\r\n                    return iContext.CardRarityStyles.slurpseries;\r\n                } else if (itemrarity === 'DARK SERIES') {\r\n                    return iContext.CardRarityStyles.dark;\r\n                } else if (itemrarity === 'Legendary') {\r\n                    return iContext.CardRarityStyles.legendary;\r\n                }\r\n            }\r\n        },\r\n        SetLinkByIDType: () => {\r\n\r\n            if (iContext.item) {\r\n                if (iContext.ItemsOfSameSet) {\r\n\r\n                    const returntype = iContext.ItemsOfSameSet.map((item, i) => {\r\n\r\n                        \r\n\r\n                        const itemtype = item.id.split('_')[0];\r\n\r\n                        \r\n                        if (itemtype === 'CID') {\r\n                            return iContext.ItemTypes.skin;\r\n                        } else if (itemtype === 'EID') {\r\n                            return iContext.ItemTypes.emote;\r\n                        } else if (itemtype === 'MusicPack') {\r\n                            return iContext.ItemTypes.musicpack;\r\n                        } else if (itemtype === 'Pickaxe') {\r\n                            return iContext.ItemTypes.pickaxe;\r\n                        } else if (itemtype === 'Wrap') {\r\n                            return iContext.ItemTypes.wrap;\r\n                        } else if (itemtype === 'Glider') {\r\n                            return iContext.ItemTypes.glider;\r\n                        } else if (itemtype === 'BID') {\r\n                            return iContext.ItemTypes.backbling\r\n                        }\r\n                    })\r\n                    //eslint-disable-next-line\r\n\r\n                    return returntype;\r\n\r\n                }\r\n            }\r\n        },\r\n        forceupdate: (name) => {\r\n            iContext.GetItem(name);\r\n        }\r\n    }\r\n\r\n    const SetFunctions = {\r\n\r\n        GetSet: () => {\r\n            if (iContext.item) {\r\n                if (iContext.item.set) {\r\n                    const {value} = iContext.item.set;    \r\n                    iContext.GetItemSet(value);\r\n                }\r\n            }\r\n        },\r\n        SetInfo: {\r\n            CardStyle: () => {\r\n                \r\n            },\r\n            SetName: () => {\r\n                if (iContext.item) {\r\n                    if (iContext.item.set) {\r\n                        const {value} = iContext.item.set;    \r\n                        return value.toUpperCase()\r\n                    }\r\n                }\r\n            },\r\n            SetLength: () => {\r\n                if (iContext.item) {\r\n                    if (iContext.ItemsOfSameSet) {\r\n   \r\n                        return iContext.ItemsOfSameSet.length;\r\n                    }\r\n                }\r\n            },\r\n            SetImages: () => {\r\n                if (iContext.item) {\r\n                    if (iContext.ItemsOfSameSet) {\r\n                        const Images = iContext.ItemsOfSameSet.map((item, i) => {\r\n                            if (item.images.featured) {\r\n                                return item.images.featured;\r\n                            } else {\r\n                                return item.images.icon;\r\n                            }\r\n                        })\r\n\r\n                        return Images\r\n                    }\r\n                }\r\n            },\r\n            SetRarity: () => {\r\n                if (iContext.item) {\r\n                    if (iContext.ItemsOfSameSet) {\r\n                        const Images = iContext.ItemsOfSameSet.map((item, i) => {\r\n                            \r\n                            const raritytype = item.rarity.displayValue;\r\n                            \r\n                            if(raritytype === 'Uncommon') {\r\n                                return iContext.CardRarityStyles.uncommon;\r\n                            } else if (raritytype === 'Epic') {\r\n                                return iContext.CardRarityStyles.epic;\r\n                            } else if (raritytype === 'Rare') {\r\n                                return iContext.CardRarityStyles.rare;\r\n                            } else if (raritytype === 'Icon Series') {\r\n                                return iContext.CardRarityStyles.iconseries;\r\n                            } else if (raritytype === 'Slurp Series') {\r\n                                return iContext.CardRarityStyles.slurpseries;\r\n                            } else if (raritytype === 'DARK SERIES') {\r\n                                return iContext.CardRarityStyles.dark;\r\n                            } else if (raritytype === 'Legendary') {\r\n                                return iContext.CardRarityStyles.legendary;\r\n                            }\r\n                            \r\n                        })\r\n                        //eslint-disable-next-line\r\n\r\n                        return Images\r\n                    }\r\n                }\r\n            },\r\n            SetItemName: () => {\r\n                if (iContext.item) {\r\n                    if (iContext.ItemsOfSameSet) {\r\n                        const name = iContext.ItemsOfSameSet.map((item, i) => {\r\n                            const {name} = item;\r\n                            const spaceregex = /\\s/gi;\r\n                            const dashregex = /-/gi;\r\n\r\n                            if (spaceregex.test(name) === true && dashregex.test(name) === false) {\r\n                                const SpaceReplaceResult = name.replaceAll(spaceregex, '-').toLowerCase()\r\n                                return SpaceReplaceResult;\r\n                    \r\n                            } else if (dashregex.test(name) === true && spaceregex.test(name) === false) { \r\n                                const DashReplaceResult = name.replaceAll(dashregex, '~').toLowerCase()\r\n                                return DashReplaceResult\r\n                    \r\n                            } else if(dashregex.test(name) === true && spaceregex.test(name) === true) {\r\n                                const DashReplaceResult = name.replaceAll(dashregex, '~').toLowerCase()\r\n                                const ReplaceSpacesToo = DashReplaceResult.replaceAll(spaceregex, '-')\r\n                                return ReplaceSpacesToo\r\n                            } else {\r\n                                return name.toLowerCase();\r\n                            }\r\n                        })\r\n                        return name\r\n                    }\r\n                }\r\n            },\r\n            SetLink: () => {\r\n                const spaceregex = /\\s/gi;\r\n                const dashregex = /-/gi;\r\n                if (spaceregex.test(SetFunctions.SetInfo.SetName()) === true && dashregex.test(SetFunctions.SetInfo.SetName()) === false) {\r\n                    return SetFunctions.SetInfo.SetName().replaceAll(spaceregex, '-').toLowerCase()\r\n                } else if (spaceregex.test(SetFunctions.SetInfo.SetName()) === false && dashregex.test(SetFunctions.SetInfo.SetName()) === true) {\r\n                    return SetFunctions.SetInfo.SetName().replaceAll(dashregex, '~')\r\n                } else if (spaceregex.test(SetFunctions.SetInfo.SetName()) === true && dashregex.test(SetFunctions.SetInfo.SetName()) === true) {\r\n                    const replacedashes = SetFunctions.SetInfo.SetName().replaceAll(dashregex, '~');\r\n                    const replacespaces = replacedashes.replaceAll(spaceregex, '-');\r\n                    return replacespaces;\r\n                }\r\n                 else if (spaceregex.test(SetFunctions.SetInfo.SetName()) === false && dashregex.test(SetFunctions.SetInfo.SetName()) === false) {\r\n                    return SetFunctions.SetInfo.SetName().toLowerCase()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        SetFunctions.GetSet();\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div className='itemsetsection itemsetsection--primary'>\r\n            <h2 className=\"itemsetsection__head\">\r\n                PART OF THE <Link to={`/sets/${SetFunctions.SetInfo.SetLink()}`} style={{textDecoration: 'none'}}><span style={{color: '#ffe227'}}>{SetFunctions.SetInfo.SetName()} SET</span></Link> ({SetFunctions.SetInfo.SetLength()})\r\n            </h2>\r\n            <div className=\"itemset itemset--primary\">\r\n                {iContext.ItemsOfSameSet && SetFunctions.SetInfo.SetImages().map((item, i) => {\r\n\r\n                    \r\n                    if (i < length) {\r\n\r\n                        const CurrentItemNameParam = SetFunctions.SetInfo.SetItemName()[i];\r\n                        const PassClickedItemName = () => {\r\n                            BoilerPlate.forceupdate(CurrentItemNameParam);\r\n                        }\r\n\r\n                        return  <Link to={`/items/${BoilerPlate.SetLinkByIDType()[i]}/${SetFunctions.SetInfo.SetItemName()[i]}`} onClick={PassClickedItemName}>\r\n                                    <div className='setitemcard setitemcard--primary'>\r\n                                        <img src={item} className='setitemcard__image' style={SetFunctions.SetInfo.SetRarity()[i]} alt={`${SetFunctions.SetInfo.SetItemName()[i].replaceAll(/-/gi, ' ').replaceAll(/~/gi, '-').toUpperCase()} FROM ITEM SET ${SetFunctions.SetInfo.SetName()}`} />\r\n                                    </div>\r\n                                </Link>\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default ItemSet;","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\Item Details Components\\Item Card\\ItemCardSection.js",["134","135"],"import React, {useContext} from 'react'\r\nimport ItemContext from '../../../../context/ItemContext/ItemContext'\r\nimport './ItemCard.css';\r\nimport ShopHistory from '../Item Shop History/ItemShopHistory';\r\nimport ItemFunctions from '../../../../../App Wide Functions/ItemFunctions';\r\nimport FormatFunctions from '../../../../../App Wide Functions/FormatFunctions';\r\nimport ItemShopHistory from '../Item Shop History/ItemShopHistory';\r\n\r\nconst ItemCardSection = () => {\r\n\r\n    const {item} = useContext(ItemContext);\r\n\r\n    const ReturnItem = (item) => {\r\n        if (item) return item\r\n    }\r\n\r\n    const {\r\n        name,\r\n        description,\r\n        images,\r\n        rarity,\r\n        shopHistory,\r\n        introduction\r\n    } = ReturnItem(item);\r\n\r\n    const {\r\n        ItemName, \r\n        ItemDescription, \r\n        ItemImage, \r\n        ItemPrice, \r\n        ItemReleaseDate,\r\n        ItemLastSeenDate,\r\n        ItemIntroduction,\r\n        ItemShopHistoryTable\r\n    } = ItemFunctions;\r\n\r\n    const {setCardRarityStyle} = FormatFunctions;\r\n    \r\n    return (\r\n        <div className='mainitemsection mainitemsection--primary'>\r\n            <div className='itemdetails itemdetails--primary'>\r\n                <div className='itemcarddetails itemcarddetails--primary'>\r\n                    <div className='itemcard itemcard--primary' style={setCardRarityStyle(rarity.displayValue)} >\r\n                            <div className='itemcardimage itemcardimage--primary'>\r\n                                <img src={ItemImage(images)} alt={`${ItemName(name)}'s ITEM CARD`} style={{height: '200px', width: '200px', margin: '0px', padding: '0px'}} />\r\n                            </div>\r\n                            <div className=\"itemcardinfo itemcardinfo--primary\">\r\n                                <p className='itemcardinfo__name'>{ItemName(name)}</p>\r\n                                <div className='itemcardprice itemcardprice--primary'>\r\n                                    <p className='itemcardprice__text'>{ItemPrice(name)}</p>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                    <div className='itemcardattributes itemcardattributes--primary' style={ItemFunctions.ItemInfo.CardStyle()}>\r\n                        <table className='itemcardattributestable itemcardattributestable--primary' style={{color: 'white'}}>\r\n                            <tbody>\r\n                            <tr className='itemcardattributestable__row'>\r\n                                <th className='itemcardattributestable__datahead' scope='row'>Last Seen</th>\r\n                                <td className='itemcardattributestable__data'>{ItemLastSeenDate(shopHistory)}</td>\r\n                            </tr>\r\n                            <tr className='itemcardattributestable__row'>\r\n                                <th className='itemcardattributestable__datahead' scope='row'>Released</th>\r\n                                <td className='itemcardattributestable__data'>{ItemReleaseDate(shopHistory)}</td>\r\n                            </tr>\r\n                            <tr className='itemcardattributestable__row'>\r\n                                <th className='itemcardattributestable__datahead' scope='row'>Season</th>\r\n                                <td className='itemcardattributestable__data'>{ItemIntroduction(introduction, 'season')}</td>\r\n                            </tr>\r\n                            <tr className='itemcardattributestable__row'>\r\n                                <th className='itemcardattributestable__datahead' scope='row'>Chapter</th>\r\n                                <td className='itemcardattributestable__data'>{ItemIntroduction(introduction, 'chapter')}</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className='itemtextdetails itemtextdetails--primary'>\r\n                    <div className='itemdescription itemdescription--primary' style={ItemFunctions.ItemInfo.CardStyle()}>\r\n                        <h2 className='itemdescription__head'>DESCRIPTION</h2>\r\n                        <p className='itemdescription__text'>{ItemDescription(description)}</p>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className='shophis shophis--primary'>\r\n                {ItemShopHistoryTable(shopHistory, ItemPrice(name))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemCardSection\r\n","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\Item Details Components\\Item Variants\\ItemVariants.js",["136"],"import React, {useContext} from 'react'\r\nimport ItemContext from '../../../../context/ItemContext/ItemContext';\r\nimport './ItemVariants.css';\r\n\r\n\r\nconst ItemVariants = () => {\r\n\r\n    const iContext = useContext(ItemContext);\r\n\r\n    const VariantFunctions = {\r\n\r\n        GetVariantImages: () => {\r\n            if (iContext.item) {\r\n                if (iContext.item.variants) {\r\n                    const allvariants = iContext.item.variants.map((item, i) => {\r\n                        const varianttypeimages = item.options.map((current, pos) => {\r\n\r\n                            return current.image;\r\n                        })\r\n                        return varianttypeimages;\r\n                    })\r\n                    return allvariants\r\n\r\n                }\r\n            }\r\n        },\r\n        CardStyle: () => {\r\n            if (iContext.item) {\r\n                const itemrarity = iContext.item.rarity.displayValue;\r\n                \r\n                if(itemrarity === 'Uncommon') {\r\n                    return iContext.CardRarityStyles.uncommon;\r\n                } else if (itemrarity === 'Epic') {\r\n                    return iContext.CardRarityStyles.epic;\r\n                } else if (itemrarity === 'Rare') {\r\n                    return iContext.CardRarityStyles.rare;\r\n                } else if (itemrarity === 'Icon Series') {\r\n                    return iContext.CardRarityStyles.iconseries;\r\n                } else if (itemrarity === 'Slurp Series') {\r\n                    return iContext.CardRarityStyles.slurpseries;\r\n                } else if (itemrarity === 'DARK SERIES') {\r\n                    return iContext.CardRarityStyles.dark;\r\n                } else if (itemrarity === 'Legendary') {\r\n                    return iContext.CardRarityStyles.legendary;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='itemvariantssection itemvariantssection--primary'>\r\n            <h2 className=\"itemvariantssection__head\">\r\n                VARIANTS\r\n            </h2>\r\n            <div className=\"itemvariants itemvariants--primary\">\r\n                    {VariantFunctions.GetVariantImages().map((item, i) => {\r\n                        const image = item.map((current, i) => {\r\n                            return  <div className='variantcard variantcard--primary'>\r\n                                        <img src={current} className='variantcard__image' style={VariantFunctions.CardStyle()} />\r\n                                    </div>\r\n                        })\r\n                        return image;\r\n                    })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemVariants\r\n","D:\\React Projects\\FortniteShop\\src\\components\\Shop\\ShopItemCard\\ShopItemCard.js",["137","138","139"],"D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\Item Details Components\\Item Shop History\\ItemShopHistory.js",["140"],"import React, {useContext} from 'react';\r\nimport ItemContext from '../../../../context/ItemContext/ItemContext';\r\nimport './ItemShopHistory.css';\r\nimport VBUCKS from '../../../../../media/images/VBUCKS.png'\r\n\r\nconst ItemShopHistory = ({price}) => {\r\n\r\n    const iContext = useContext(ItemContext)\r\n\r\n    const mutableShopHistory = () => {\r\n        if (iContext.loading === false) {\r\n\r\n            const {item} = iContext;\r\n            const {shopHistory} = item;\r\n\r\n            if (shopHistory) {\r\n\r\n                return [...shopHistory]\r\n            } else {\r\n                return []\r\n            }\r\n\r\n            // a practical use for the spread operator...\r\n            // couldn't do array reverse (to have recent appearances first)\r\n            // on shophistory from iContext directly as it references state (which is immutable)\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"itemshophistory itemshophistory--primary\">\r\n            <div className='tablesummaryhead tablesummaryhead--primary'>\r\n                SHOP HISTORY\r\n            </div>\r\n            <div className='historytablescroll historytablescroll--primary'>\r\n                <table className='historytable historytable--primary'>\r\n                    <thead>\r\n                    <tr>\r\n                        <th className='historytable__tcol' scope='col'>DATE</th>\r\n                        <th className='historytable__tcol' scope='col'>PRICE</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {iContext.item && iContext.item.shopHistory && iContext.item.shopHistory.length > 0 && mutableShopHistory().reverse().map((item, i) => {\r\n\r\n                            const date = item.split(/T/gi)[0]\r\n\r\n                            return <tr className='historytable__bodyrow'>\r\n                                    <td className='historytable__bodydata'>{date}</td>\r\n                                    <td className='historytable__bodydata'>\r\n                                        <span className='historytable__span'>\r\n                                            <img className='historytable__priceimage' src={VBUCKS}/>\r\n                                        {price}\r\n                                        </span>\r\n                                    </td>\r\n                                   </tr>;\r\n                        })}\r\n                    </tbody>\r\n\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemShopHistory\r\n","D:\\React Projects\\FortniteShop\\src\\App Wide Functions\\ItemFunctions.js",[],"D:\\React Projects\\FortniteShop\\src\\App Wide Functions\\FormatFunctions.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":15},{"ruleId":"149","severity":1,"message":"150","line":25,"column":28,"nodeType":"151","endLine":25,"endColumn":100},{"ruleId":"145","severity":1,"message":"152","line":1,"column":46,"nodeType":"147","messageId":"148","endLine":1,"endColumn":62},{"ruleId":"149","severity":1,"message":"150","line":7,"column":9,"nodeType":"151","endLine":7,"endColumn":38},{"ruleId":"153","severity":1,"message":"154","line":25,"column":117,"nodeType":"155","messageId":"156","endLine":25,"endColumn":119},{"ruleId":"153","severity":1,"message":"154","line":33,"column":114,"nodeType":"155","messageId":"156","endLine":33,"endColumn":116},{"ruleId":"153","severity":1,"message":"154","line":24,"column":107,"nodeType":"155","messageId":"156","endLine":24,"endColumn":109},{"ruleId":"153","severity":1,"message":"154","line":38,"column":78,"nodeType":"155","messageId":"156","endLine":38,"endColumn":80},{"ruleId":"153","severity":1,"message":"154","line":121,"column":78,"nodeType":"155","messageId":"156","endLine":121,"endColumn":80},{"ruleId":"153","severity":1,"message":"154","line":206,"column":92,"nodeType":"155","messageId":"156","endLine":206,"endColumn":94},{"ruleId":"145","severity":1,"message":"157","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":19},{"ruleId":"145","severity":1,"message":"158","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":23},{"ruleId":"149","severity":1,"message":"150","line":59,"column":41,"nodeType":"151","endLine":59,"endColumn":130},{"ruleId":"159","severity":1,"message":"160","line":12,"column":8,"nodeType":"161","endLine":12,"endColumn":10,"suggestions":"162"},{"ruleId":"149","severity":1,"message":"150","line":21,"column":25,"nodeType":"151","endLine":21,"endColumn":117},{"ruleId":"149","severity":1,"message":"150","line":26,"column":29,"nodeType":"151","endLine":26,"endColumn":82},{"ruleId":"149","severity":1,"message":"150","line":52,"column":45,"nodeType":"151","endLine":52,"endColumn":101},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'ItemSet' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'RELOAD_COMPONENT' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'ShopHistory' is defined but never used.","'ItemShopHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'BundleName', 'name', and 'price'. Either include them or remove the dependency array.","ArrayExpression",["165"],"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},"Update the dependencies array to be: [BundleName, name, price]",{"range":"168","text":"169"},[438,440],"[BundleName, name, price]"]