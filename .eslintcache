[{"D:\\React Projects\\FortniteShop\\src\\index.js":"1","D:\\React Projects\\FortniteShop\\src\\App.js":"2","D:\\React Projects\\FortniteShop\\src\\reportWebVitals.js":"3","D:\\React Projects\\FortniteShop\\src\\components\\Shop\\Shop.js":"4","D:\\React Projects\\FortniteShop\\src\\components\\Set\\Set.js":"5","D:\\React Projects\\FortniteShop\\src\\components\\context\\SetContext\\SetState.js":"6","D:\\React Projects\\FortniteShop\\src\\components\\Item\\Item.js":"7","D:\\React Projects\\FortniteShop\\src\\components\\context\\ShopContext\\ShopState.js":"8","D:\\React Projects\\FortniteShop\\src\\components\\context\\ItemContext\\ItemState.js":"9","D:\\React Projects\\FortniteShop\\src\\components\\layout\\navbar\\Navbar.js":"10","D:\\React Projects\\FortniteShop\\src\\components\\context\\ShopContext\\ShopContext.js":"11","D:\\React Projects\\FortniteShop\\src\\components\\context\\SetContext\\SetContext.js":"12","D:\\React Projects\\FortniteShop\\src\\components\\context\\ItemContext\\ItemContext.js":"13","D:\\React Projects\\FortniteShop\\src\\components\\context\\SetContext\\SetReducer.js":"14","D:\\React Projects\\FortniteShop\\src\\components\\context\\types.js":"15","D:\\React Projects\\FortniteShop\\src\\components\\context\\ShopContext\\ShopReducer.js":"16","D:\\React Projects\\FortniteShop\\src\\components\\context\\ItemContext\\ItemReducer.js":"17","D:\\React Projects\\FortniteShop\\src\\components\\layout\\spinner\\Spinner.js":"18","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\ItemDetailsSection.js":"19","D:\\React Projects\\FortniteShop\\src\\components\\Shop\\ShopSections\\FeaturedShopSection\\FeaturedShopSection.js":"20","D:\\React Projects\\FortniteShop\\src\\components\\Shop\\ShopSections\\DailyShopSection\\DailyShopSection.js":"21","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\Item Details Components\\Item Set\\ItemSet.js":"22","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\Item Details Components\\Item Card\\ItemCardSection.js":"23","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\Item Details Components\\Item Variants\\ItemVariants.js":"24","D:\\React Projects\\FortniteShop\\src\\components\\Shop\\ShopItemCard\\ShopItemCard.js":"25","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\Item Details Components\\Item Shop History\\ItemShopHistory.js":"26","D:\\React Projects\\FortniteShop\\src\\App Wide Functions\\ItemFunctions.js":"27","D:\\React Projects\\FortniteShop\\src\\App Wide Functions\\FormatFunctions.js":"28","D:\\React Projects\\FortniteShop\\src\\components\\Stats\\Stats.js":"29","D:\\React Projects\\FortniteShop\\src\\components\\context\\Stats Context\\StatsState.js":"30","D:\\React Projects\\FortniteShop\\src\\components\\context\\Stats Context\\StatsContext.js":"31","D:\\React Projects\\FortniteShop\\src\\components\\context\\Stats Context\\StatsReducer.js":"32","D:\\React Projects\\FortniteShop\\src\\components\\Stats\\Stat\\PlayerStats.js":"33","D:\\React Projects\\FortniteShop\\src\\App Wide Functions\\StatFunctions.js":"34","D:\\React Projects\\FortniteShop\\src\\components\\Stats\\Stat\\StatCategoryCard.js":"35","D:\\React Projects\\FortniteShop\\src\\components\\context\\NewsContext\\NewsState.js":"36","D:\\React Projects\\FortniteShop\\src\\components\\context\\NewsContext\\NewsContext.js":"37","D:\\React Projects\\FortniteShop\\src\\components\\context\\NewsContext\\NewsReducer.js":"38","D:\\React Projects\\FortniteShop\\src\\components\\News\\News.js":"39","D:\\React Projects\\FortniteShop\\src\\components\\News\\NewsSection\\NewsSection.js":"40","D:\\React Projects\\FortniteShop\\src\\App Wide Functions\\NewsFunctions.js":"41","D:\\React Projects\\FortniteShop\\src\\components\\News\\NewsSection\\NewsCard\\NewsCard.js":"42"},{"size":517,"mtime":1612986863694,"results":"43","hashOfConfig":"44"},{"size":1730,"mtime":1613234938838,"results":"45","hashOfConfig":"44"},{"size":375,"mtime":1612986863701,"results":"46","hashOfConfig":"44"},{"size":1170,"mtime":1613003547653,"results":"47","hashOfConfig":"44"},{"size":2055,"mtime":1613005303393,"results":"48","hashOfConfig":"44"},{"size":3650,"mtime":1612986863691,"results":"49","hashOfConfig":"44"},{"size":725,"mtime":1612988406990,"results":"50","hashOfConfig":"44"},{"size":5141,"mtime":1613005363808,"results":"51","hashOfConfig":"44"},{"size":2570,"mtime":1613005024215,"results":"52","hashOfConfig":"44"},{"size":3712,"mtime":1613244185231,"results":"53","hashOfConfig":"44"},{"size":108,"mtime":1612986863691,"results":"54","hashOfConfig":"44"},{"size":107,"mtime":1612986863690,"results":"55","hashOfConfig":"44"},{"size":111,"mtime":1612986863669,"results":"56","hashOfConfig":"44"},{"size":643,"mtime":1612986863690,"results":"57","hashOfConfig":"44"},{"size":669,"mtime":1613234102876,"results":"58","hashOfConfig":"44"},{"size":791,"mtime":1612986863691,"results":"59","hashOfConfig":"44"},{"size":654,"mtime":1612986863669,"results":"60","hashOfConfig":"44"},{"size":243,"mtime":1612986863693,"results":"61","hashOfConfig":"44"},{"size":1028,"mtime":1612987279563,"results":"62","hashOfConfig":"44"},{"size":3573,"mtime":1613005329863,"results":"63","hashOfConfig":"44"},{"size":3423,"mtime":1612990293226,"results":"64","hashOfConfig":"44"},{"size":2317,"mtime":1613002125013,"results":"65","hashOfConfig":"44"},{"size":4556,"mtime":1613003467952,"results":"66","hashOfConfig":"44"},{"size":1495,"mtime":1612998685299,"results":"67","hashOfConfig":"44"},{"size":1549,"mtime":1612990285741,"results":"68","hashOfConfig":"44"},{"size":2183,"mtime":1613002396152,"results":"69","hashOfConfig":"44"},{"size":6403,"mtime":1613003124558,"results":"70","hashOfConfig":"44"},{"size":3091,"mtime":1612995978734,"results":"71","hashOfConfig":"44"},{"size":4462,"mtime":1613225173798,"results":"72","hashOfConfig":"44"},{"size":2896,"mtime":1613095151174,"results":"73","hashOfConfig":"44"},{"size":108,"mtime":1613012034793,"results":"74","hashOfConfig":"44"},{"size":1153,"mtime":1613088852267,"results":"75","hashOfConfig":"44"},{"size":3996,"mtime":1613225765154,"results":"76","hashOfConfig":"44"},{"size":3764,"mtime":1613229445234,"results":"77","hashOfConfig":"44"},{"size":7062,"mtime":1613229612066,"results":"78","hashOfConfig":"44"},{"size":1019,"mtime":1613236902444,"results":"79","hashOfConfig":"44"},{"size":106,"mtime":1613234036966,"results":"80","hashOfConfig":"44"},{"size":488,"mtime":1613234677643,"results":"81","hashOfConfig":"44"},{"size":1176,"mtime":1613242900159,"results":"82","hashOfConfig":"44"},{"size":837,"mtime":1613241641323,"results":"83","hashOfConfig":"44"},{"size":531,"mtime":1613238385456,"results":"84","hashOfConfig":"44"},{"size":681,"mtime":1613239134232,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"in7t7z",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"88"},"D:\\React Projects\\FortniteShop\\src\\index.js",[],["187","188"],"D:\\React Projects\\FortniteShop\\src\\App.js",[],"D:\\React Projects\\FortniteShop\\src\\reportWebVitals.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\Shop\\Shop.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\Set\\Set.js",["189","190","191"],"import React, {useContext, useEffect} from 'react'\r\nimport SetContext from '../context/SetContext/SetContext';\r\nimport ItemSet from '../Item/ItemDetailsSection/Item Details Components/Item Set/ItemSet'\r\nimport Spinner from '../layout/spinner/Spinner';\r\nimport ItemFunctions from '../../App Wide Functions/ItemFunctions'\r\nimport FormatFunctions from '../../App Wide Functions/FormatFunctions'\r\nimport {Link} from 'react-router-dom'\r\nimport ItemContext from '../context/ItemContext/ItemContext';\r\n\r\nconst Set = ({match}) => {\r\n\r\n    const {SetName, SetInfo, loading, GetSet} = useContext(SetContext);\r\n    const {GetItem} = useContext(ItemContext)\r\n    useEffect(() => {\r\n       GetSet(match.params.setname)\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    const {setCardRarityStyle, SetLinkByIDType, NameCharacterHandler} = FormatFunctions;\r\n    const {ItemImage, SetItemName} = ItemFunctions;\r\n\r\n    return (\r\n\r\n        <div className='set set--primary'>\r\n            {loading ? <Spinner /> :  <>\r\n            <h2 className=\"set__head\">\r\n                THE <span style={{color: '#ffe227'}}>{SetName} SET</span> ({SetInfo && SetInfo.length})\r\n            </h2>\r\n            <div className=\"setcontainer setcontainer--primary\">\r\n                {SetInfo && SetInfo.map((item, i) => {\r\n                    \r\n                    const {id, rarity, name} = item;\r\n                    const {displayValue} = rarity\r\n\r\n                    return <Link to={`/items/${SetLinkByIDType(id)}/${NameCharacterHandler(name)}`} onClick={() => {\r\n                        GetItem(NameCharacterHandler(name))\r\n                    }}>\r\n                                <div className='setitemcard setitemcard--primary' style={setCardRarityStyle(displayValue)}>\r\n                                    <img src={ItemImage(item)} style={{height: '150px', width: '150px'}} />\r\n                                </div>\r\n                            </Link>\r\n                })}\r\n            </div>\r\n            </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Set\r\n","D:\\React Projects\\FortniteShop\\src\\components\\context\\SetContext\\SetState.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\Item\\Item.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\ShopContext\\ShopState.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\ItemContext\\ItemState.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\layout\\navbar\\Navbar.js",["192","193"],"D:\\React Projects\\FortniteShop\\src\\components\\context\\ShopContext\\ShopContext.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\SetContext\\SetContext.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\ItemContext\\ItemContext.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\SetContext\\SetReducer.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\types.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\ShopContext\\ShopReducer.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\ItemContext\\ItemReducer.js",["194"],"import {GET_ITEM, GET_ITEM_SET, SET_LOADING, RELOAD_COMPONENT} from '../types';\r\n\r\nconst ItemReducer = (state, action) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ITEM:\r\n            return {\r\n                ...state,\r\n                item: action.payload,\r\n                loading: false\r\n            }\r\n        case GET_ITEM_SET:\r\n            return {\r\n                ...state,\r\n                ItemsOfSameSet: action.payload\r\n            }\r\n    }\r\n}\r\nexport default ItemReducer;","D:\\React Projects\\FortniteShop\\src\\components\\layout\\spinner\\Spinner.js",["195"],"import React from 'react'\r\nimport InfinitySpinner from '../../../media/images/InfinityTeal.svg';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n       <>\r\n        <img src={InfinitySpinner} />\r\n       </>\r\n    )\r\n    \r\n}\r\n\r\nexport default Spinner\r\n","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\ItemDetailsSection.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\Shop\\ShopSections\\FeaturedShopSection\\FeaturedShopSection.js",["196","197"],"import React from 'react'\r\nimport {useContext} from 'react';\r\nimport ShopContext from '../../../context/ShopContext/ShopContext'\r\nimport './FeaturedShopSection.css';\r\nimport ShopItemCard from '../../ShopItemCard/ShopItemCard';\r\nimport FormatFunctions from '../../../../App Wide Functions/FormatFunctions'\r\nimport ItemFunctions from '../../../../App Wide Functions/ItemFunctions';\r\n\r\nconst FeaturedShopSection = () => {\r\n\r\n    const {CurrentFeatured} = useContext(ShopContext);\r\n    const {setCardRarityStyle} = FormatFunctions;\r\n    const {ReturnFeatured} = ItemFunctions;\r\n\r\n    return (\r\n        <div className='featuredview featuredview--primary'>\r\n            <p className='featuredview__head viewhead'>FEATURED</p>\r\n            <div>\r\n            <div className='featureditemsection featureditemsection--primary'>\r\n                {CurrentFeatured && ReturnFeatured(CurrentFeatured, 'images').map((item, i) => {\r\n\r\n                            const BundleCheck = {\r\n                                BundleName: () => {\r\n                                    if (ReturnFeatured(CurrentFeatured, 'bundlestatuses')) {\r\n                                        return ReturnFeatured(CurrentFeatured, 'bundlestatuses').map((current, pos) => {\r\n                                            if (current) return current.name\r\n                                            if (!current) return current\r\n                                        })\r\n                                    }\r\n                                },\r\n                                BundleImage: () => {\r\n                                    if (ReturnFeatured(CurrentFeatured, 'bundlestatuses')) {\r\n                                        return ReturnFeatured(CurrentFeatured, 'bundlestatuses').map((curr, pos) => {\r\n                                            if (curr) return curr.image\r\n                                            if(!curr) return curr\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n                            \r\n                            const id = ReturnFeatured(CurrentFeatured, 'IDs').map((current, pos) => {\r\n                                return String(current[0])\r\n                            });\r\n\r\n                            const rarity = ReturnFeatured(CurrentFeatured, 'rarities').map((current, pos) => {\r\n                                return setCardRarityStyle(current[0])\r\n                            });\r\n\r\n                            const name = ReturnFeatured(CurrentFeatured, 'names').map((current, pos) => {\r\n                                return current[0];\r\n                            });\r\n\r\n                            if (item.length > 1) {\r\n                                return <ShopItemCard price={ReturnFeatured(CurrentFeatured, 'prices')[i]} image={BundleCheck.BundleImage()[i] ? BundleCheck.BundleImage()[i] : item[0]} id={id[i]} rarity={rarity[i]} name={name[i]} BundleName={BundleCheck.BundleName()[i] && BundleCheck.BundleName()[i]} />\r\n                            } else {\r\n                                return <ShopItemCard price={ReturnFeatured(CurrentFeatured, 'prices')[i]} image={BundleCheck.BundleImage()[i] ? BundleCheck.BundleImage()[i]  : item} id={id[i]} rarity={rarity[i]} name={name[i]} BundleName={BundleCheck.BundleName()[i] && BundleCheck.BundleName()[i]} />\r\n                            }   \r\n                        })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeaturedShopSection","D:\\React Projects\\FortniteShop\\src\\components\\Shop\\ShopSections\\DailyShopSection\\DailyShopSection.js",["198"],"import React from 'react'\r\nimport {useContext} from 'react';\r\nimport ShopContext from '../../../context/ShopContext/ShopContext'\r\nimport ShopItemCard from '../../ShopItemCard/ShopItemCard';\r\nimport FormatFunctions from '../../../../App Wide Functions/FormatFunctions'\r\nimport './DailyShopSection.css';\r\nimport ItemFunctions from '../../../../App Wide Functions/ItemFunctions'\r\n\r\nconst DailyShopSection = () => {\r\n\r\n    const {CurrentDaily} = useContext(ShopContext);\r\n    const {setCardRarityStyle} = FormatFunctions;\r\n    const {ReturnDaily} = ItemFunctions;\r\n\r\n    return (\r\n        <div className='dailyview dailyview--primary'>\r\n            <p className='dailyview__head viewhead'>DAILY</p>\r\n            <div className='dailyitemsection dailyitemsection--primary'>\r\n                {CurrentDaily && ReturnDaily(CurrentDaily, 'images').map((item, i) => {\r\n\r\n                        const BundleCheck = {\r\n                            BundleName: () => {\r\n                                if (ReturnDaily(CurrentDaily, 'bundlestatuses')) {\r\n                                    return ReturnDaily(CurrentDaily, 'bundlestatuses').map((current, pos) => {\r\n                                        if (current) return current.name\r\n                                        if (!current) return current\r\n                                    })\r\n                                }\r\n                            },\r\n                            BundleImage: () => {\r\n                                if (ReturnDaily(CurrentDaily, 'bundlestatuses')) {\r\n                                    return ReturnDaily(CurrentDaily, 'bundlestatuses').map((curr, pos) => {\r\n                                        if (curr) {\r\n                                            return curr.image\r\n                                        } else {\r\n                                            return curr\r\n                                        }\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n                        \r\n                        const id = ReturnDaily(CurrentDaily, 'IDs').map((current, i) => {\r\n                            return String(current[0]);\r\n                        });\r\n                        const rarity = ReturnDaily(CurrentDaily, 'rarities').map((current, i) => {\r\n                            return setCardRarityStyle(current[0])\r\n                        });\r\n\r\n                        const name = ReturnDaily(CurrentDaily, 'names').map((current, i) => {\r\n                            return current[0];\r\n                        });\r\n\r\n                        if (item.length > 1) {\r\n                            return <ShopItemCard price={ReturnDaily(CurrentDaily, 'prices')[i]} image={BundleCheck.BundleImage()[i] ? BundleCheck.BundleImage()[i] : item[0]} id={id[i]} rarity={rarity[i]} name={name[i]} BundleName={BundleCheck.BundleName()[i] && BundleCheck.BundleName()[i]} />\r\n                        } else {\r\n                            return <ShopItemCard price={ReturnDaily(CurrentDaily, 'prices')[i]} image={BundleCheck.BundleImage()[i] ? BundleCheck.BundleImage()[i] : item} id={id[i]} rarity={rarity[i]} name={name[i]} BundleName={BundleCheck.BundleName()[i] && BundleCheck.BundleName()[i]} />\r\n                        }   \r\n                    })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DailyShopSection","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\Item Details Components\\Item Set\\ItemSet.js",["199","200"],"import ItemContext from '../../../../context/ItemContext/ItemContext'\r\nimport './ItemSet.css'\r\nimport {useEffect, useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport FormatFunctions from '../../../../../App Wide Functions/FormatFunctions'\r\nimport ItemFunctions from '../../../../../App Wide Functions/ItemFunctions';\r\n\r\n\r\nconst ItemSet = ({length}) => {\r\n\r\n    const {ItemsOfSameSet, GetItem, GetItemSet, item} = useContext(ItemContext);\r\n    const {setCardRarityStyle, SetLinkByIDType} = FormatFunctions;\r\n    const {\r\n        GetSet,\r\n        SetName,\r\n        SetItemSetLink,\r\n        SetItemSetLength,\r\n        SetItemSetImages,\r\n        SetItemName\r\n    } = ItemFunctions;\r\n\r\n    useEffect(() => {\r\n        GetSet(item, GetItemSet)\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div className='itemsetsection itemsetsection--primary'>\r\n            <h2 className=\"itemsetsection__head\">\r\n                PART OF THE <Link to={`/sets/${SetItemSetLink(SetName(item))}`} style={{textDecoration: 'none'}}><span style={{color: '#ffe227'}}>{SetName(item)} SET</span></Link> ({SetItemSetLength(ItemsOfSameSet)})\r\n            </h2>\r\n            <div className=\"itemset itemset--primary\">\r\n                {ItemsOfSameSet && ItemsOfSameSet.map((item, i) => {\r\n                    const {rarity, id, name} = item;\r\n                    const {displayValue} = rarity;\r\n                    if (i < length) {\r\n\r\n                        return  <Link style={{textDecoration: 'none'}} to={`/items/${SetLinkByIDType(id)}/${SetItemName(ItemsOfSameSet)[i]}`} onClick={() => {GetItem(SetItemName(ItemsOfSameSet)[i])}}> {/* // set item name as param */}\r\n                                    <div className='setitemcard setitemcard--primary' style={setCardRarityStyle(displayValue)}>\r\n                                        <img src={SetItemSetImages(ItemsOfSameSet)[i]} className='setitemcard__image' alt={`${SetItemName(ItemsOfSameSet)[i].replaceAll(/-/gi, ' ').replaceAll(/~/gi, '-').toUpperCase()} FROM ITEM SET ${SetName(item)}`} />\r\n                                        \r\n                                    </div>\r\n                                </Link>\r\n\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ItemSet;","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\Item Details Components\\Item Card\\ItemCardSection.js",["201","202"],"import React, {useContext} from 'react'\r\nimport ItemContext from '../../../../context/ItemContext/ItemContext'\r\nimport './ItemCard.css';\r\nimport ShopHistory from '../Item Shop History/ItemShopHistory';\r\nimport ItemFunctions from '../../../../../App Wide Functions/ItemFunctions';\r\nimport FormatFunctions from '../../../../../App Wide Functions/FormatFunctions';\r\nimport ItemShopHistory from '../Item Shop History/ItemShopHistory';\r\nimport {Helmet} from 'react-helmet'\r\n\r\nconst ItemCardSection = () => {\r\n\r\n    const {item, loading} = useContext(ItemContext);\r\n\r\n    const {\r\n        ItemName, \r\n        ItemDescription, \r\n        ItemImage, \r\n        ItemPrice, \r\n        ItemReleaseDate,\r\n        ItemLastSeenDate,\r\n        ItemIntroduction,\r\n        ItemShopHistoryTable,\r\n        ItemRarity\r\n    } = ItemFunctions;\r\n\r\n    const {setCardRarityStyle} = FormatFunctions;\r\n    \r\n    return (\r\n        <div className='mainitemsection mainitemsection--primary'>\r\n            <Helmet><title>{loading ? `LOADING... FORTNITEBRSHOP` : `${ItemName(item, 'title')} | ${ItemPrice(item) && `${ItemPrice(item)} VBUCKS`} - FortniteBRShop`}</title></Helmet>\r\n            <div className='itemdetails itemdetails--primary'>\r\n                <div className='itemcarddetails itemcarddetails--primary'>\r\n                    <div className='itemcard itemcard--primary' style={setCardRarityStyle(ItemRarity(item))} >\r\n                            <div className='itemcardimage itemcardimage--primary'>\r\n                                <img src={ItemImage(item)} alt={`${ItemName(item, 'card')}'s ITEM CARD`} style={{height: '200px', width: '200px', margin: '0px', padding: '0px'}} />\r\n                            </div>\r\n                            <div className=\"itemcardinfo itemcardinfo--primary\">\r\n                                <p className='itemcardinfo__name'>{ItemName(item, 'card')}</p>\r\n                                <div className='itemcardprice itemcardprice--primary'>\r\n                                    <p className='itemcardprice__text'>{ItemPrice(item)}</p>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                    <div className='itemcardattributes itemcardattributes--primary' style={setCardRarityStyle(ItemRarity(item))}>\r\n                        <table className='itemcardattributestable itemcardattributestable--primary' style={{color: 'white'}}>\r\n                            <tbody>\r\n                            <tr className='itemcardattributestable__row'>\r\n                                <th className='itemcardattributestable__datahead' scope='row'>Last Seen</th>\r\n                                <td className='itemcardattributestable__data'>{ItemLastSeenDate(item)}</td>\r\n                            </tr>\r\n                            <tr className='itemcardattributestable__row'>\r\n                                <th className='itemcardattributestable__datahead' scope='row'>Released</th>\r\n                                <td className='itemcardattributestable__data'>{ItemReleaseDate(item)}</td>\r\n                            </tr>\r\n                            <tr className='itemcardattributestable__row'>\r\n                                <th className='itemcardattributestable__datahead' scope='row'>Season</th>\r\n                                <td className='itemcardattributestable__data'>{ItemIntroduction(item, 'season')}</td>\r\n                            </tr>\r\n                            <tr className='itemcardattributestable__row'>\r\n                                <th className='itemcardattributestable__datahead' scope='row'>Chapter</th>\r\n                                <td className='itemcardattributestable__data'>{ItemIntroduction(item, 'chapter')}</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className='itemtextdetails itemtextdetails--primary'>\r\n                    <div className='itemdescription itemdescription--primary' style={setCardRarityStyle(ItemRarity(item))}>\r\n                        <h2 className='itemdescription__head'>DESCRIPTION</h2>\r\n                        <p className='itemdescription__text'>{ItemDescription(item)}</p>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className='shophis shophis--primary'>\r\n                {ItemShopHistoryTable(item, ItemPrice(item))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemCardSection\r\n","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\Item Details Components\\Item Variants\\ItemVariants.js",["203","204","205"],"import React, {useContext} from 'react'\r\nimport FormatFunctions from '../../../../../App Wide Functions/FormatFunctions';\r\nimport ItemFunctions from '../../../../../App Wide Functions/ItemFunctions';\r\nimport ItemContext from '../../../../context/ItemContext/ItemContext';\r\nimport './ItemVariants.css';\r\n\r\n\r\nconst ItemVariants = () => {\r\n\r\n    const {item} = useContext(ItemContext);\r\n    const {setCardRarityStyle} = FormatFunctions;\r\n\r\n    return (\r\n        <div className='itemvariantssection itemvariantssection--primary'>\r\n            <h2 className=\"itemvariantssection__head\">\r\n                VARIANTS {item.variants && `(${item.variants[0].options.length})`}\r\n            </h2>\r\n            <div className=\"itemvariants itemvariants--primary\">\r\n                    {item.variants && item.variants.map((variant, i) => {\r\n                        const {id, rarity} = item;\r\n                        const {displayValue} = rarity;\r\n                        const {options} = variant\r\n                        return options.map((option, i) => {\r\n                            const {image} = option;\r\n                            return  <div className='variantcard variantcard--primary'>\r\n                                        <img src={image} className='variantcard__image' style={setCardRarityStyle(displayValue)} />\r\n                                    </div>\r\n                        })\r\n                    })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemVariants\r\n","D:\\React Projects\\FortniteShop\\src\\components\\Shop\\ShopItemCard\\ShopItemCard.js",["206","207","208"],"import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {useEffect} from 'react'\r\nimport './ShopItemCard.css'\r\nimport VBUCKS from '../../../media/images/VBUCKS.png';\r\nimport FormatFunctions from '../../../App Wide Functions/FormatFunctions'\r\n\r\nconst ShopItemCard = ({price, image, id, rarity, name, BundleName}) => {\r\n\r\n    useEffect(()=> {\r\n        localStorage.setItem(name.toUpperCase() || BundleName, price)\r\n    }, []);\r\n\r\n    const {SetLinkByIDType, NameCharacterHandler} = FormatFunctions;\r\n\r\n    return (\r\n        <div className='s'>\r\n            <div className='shopitemcard shopitemcard--primary' style={rarity} >\r\n                <Link to={`/items/${SetLinkByIDType(id)}/${NameCharacterHandler(name)}`} className='shopitemcard__link'>\r\n                    <div className='shopitemimage shopitemimage--primary'>\r\n                        <img src={image} style={{height: '150px', width: '150px', margin: '0px', padding: '0px'}} />\r\n                    </div>\r\n                    <div className=\"shopiteminfo shopiteminfo--primary\">\r\n                        <p className='shopiteminfo__name'>{name.toUpperCase()}</p>\r\n                        <div className='shopitemprice shopitemprice--primary'>\r\n                            <img src={VBUCKS} className='shopitemprice__image' />\r\n                            <p className='shopitemprice__text'>{price}</p>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShopItemCard;\r\n\r\n","D:\\React Projects\\FortniteShop\\src\\components\\Item\\ItemDetailsSection\\Item Details Components\\Item Shop History\\ItemShopHistory.js",["209"],"import React, {useContext} from 'react';\r\nimport ItemContext from '../../../../context/ItemContext/ItemContext';\r\nimport './ItemShopHistory.css';\r\nimport VBUCKS from '../../../../../media/images/VBUCKS.png'\r\n\r\nconst ItemShopHistory = ({price}) => {\r\n\r\n    const {loading, item} = useContext(ItemContext)\r\n\r\n    const mutableShopHistory = () => {\r\n        if (loading === false) {\r\n            const {shopHistory} = item;\r\n            if (shopHistory) return [...shopHistory]\r\n            if (!shopHistory) return []\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"itemshophistory itemshophistory--primary\">\r\n            <div className='tablesummaryhead tablesummaryhead--primary'>\r\n                SHOP HISTORY\r\n            </div>\r\n            <div className='historytablescroll historytablescroll--primary'>\r\n                <table className='historytable historytable--primary'>\r\n                    <thead>\r\n                    <tr>\r\n                        <th className='historytable__tcol' scope='col'>DATE</th>\r\n                        <th className='historytable__tcol' scope='col'>PRICE</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {item && item.shopHistory && item.shopHistory.length > 0 && mutableShopHistory().reverse().map((item, i) => {\r\n\r\n                            const date = item.split(/T/gi)[0]\r\n\r\n                            return <tr className='historytable__bodyrow'>\r\n                                    <td className='historytable__bodydata'>{date}</td>\r\n                                    <td className='historytable__bodydata'>\r\n                                        <span className='historytable__span'>\r\n                                            <img className='historytable__priceimage' src={VBUCKS}/>\r\n                                        {price}\r\n                                        </span>\r\n                                    </td>\r\n                                   </tr>;\r\n                        })}\r\n                    </tbody>\r\n\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemShopHistory\r\n","D:\\React Projects\\FortniteShop\\src\\App Wide Functions\\ItemFunctions.js",["210","211"],"import ShopHistory from '../components/Item/ItemDetailsSection/Item Details Components/Item Shop History/ItemShopHistory'\r\n\r\nexport const ItemFunctions = {\r\n    ItemName: (item, type) => {\r\n        if (item && type === 'title') {const {name} = item; return name;}\r\n        if (item && type === 'card') {const {name} = item; return name.toUpperCase();}\r\n    },\r\n    ItemRarity: (item) => {\r\n        if (item) {const {rarity} = item; const {displayValue} = rarity; return displayValue;}\r\n    },\r\n    ItemDescription: (item) => {\r\n        if (item) {const {description} = item; return description;}\r\n    },\r\n    ItemImage: (item) => {\r\n        if (item) {\r\n            const {images} = item;\r\n            const {featured, icon} = images;\r\n            if (icon) return icon\r\n            if (!icon) return featured\r\n        }\r\n    },\r\n    ItemPrice: (item) => {\r\n        if (item) {\r\n            const {name} = item;\r\n            const IndexOfNameKey = Object.keys(localStorage).indexOf(name.toUpperCase());\r\n            return Object.values(localStorage)[IndexOfNameKey]\r\n        }\r\n    },\r\n    ItemReleaseDate: (item) => {\r\n        if (item) {\r\n            const {shopHistory} = item;\r\n            if (shopHistory) return shopHistory[0].split(/T/gi)[0] \r\n            if (!shopHistory) return `Battle Pass`\r\n        }\r\n    },\r\n    ItemLastSeenDate: (item) => {\r\n        if (item) {\r\n            const {shopHistory} = item;\r\n            if (shopHistory) return shopHistory[shopHistory.length - 1].split(/T/gi)[0]\r\n            if (!shopHistory) return `-`\r\n        }\r\n    },\r\n    ItemIntroduction: (item, type) => {\r\n        if (item) {   \r\n            const {introduction} = item;\r\n            if (type === 'season') return introduction.season;\r\n            if (type === 'chapter') return introduction.chapter;\r\n        }\r\n    },\r\n    ItemShopHistoryTable: (item, LocalStgPrice) => {\r\n        if (item) {\r\n            const {shopHistory} = item;\r\n            if (shopHistory && shopHistory.length > 0) return <ShopHistory price={LocalStgPrice}/>\r\n        }\r\n    },\r\n    GetSet: (item, GetItemSet) => {\r\n        if (item) {\r\n            const {set} = item;\r\n            if (set) GetItemSet(set.value)\r\n        }\r\n    },\r\n    SetName: (item) => {\r\n        if (item) {\r\n            const {set} = item;\r\n            if (set) {\r\n                const {value} = set;\r\n                return value.toUpperCase()\r\n            } \r\n        }\r\n    },\r\n    SetItemSetLink: (setname) => {\r\n            const spaceregex = /\\s/gi;\r\n            const dashregex = /-/gi;\r\n            if (spaceregex.test(setname) && !dashregex.test(setname)) return setname.replaceAll(spaceregex, '-').toLowerCase()\r\n            if (!spaceregex.test(setname) && dashregex.test(setname)) return setname.replaceAll(dashregex, '~')\r\n            if (!spaceregex.test(setname) && !dashregex.test(setname)) return setname.toLowerCase()\r\n            if (spaceregex.test(setname) && dashregex.test(setname)) {\r\n                const replacedashes = setname.replaceAll(dashregex, '~');\r\n                const replacespaces = replacedashes.replaceAll(spaceregex, '-');\r\n                return replacespaces;\r\n            }\r\n    },\r\n    SetItemSetLength: (ItemsOfSameSet) => {\r\n        if (ItemsOfSameSet) return ItemsOfSameSet.length\r\n    },\r\n    SetItemName: (ItemsOfSameSet) => {\r\n        if (ItemsOfSameSet) {\r\n            const name = ItemsOfSameSet.map((item, i) => {\r\n                const {name} = item;\r\n                const spaceregex = /\\s/gi;\r\n                const dashregex = /-/gi;\r\n\r\n                if (spaceregex.test(name) && !dashregex.test(name)) {\r\n                    const SpaceReplaceResult = name.replaceAll(spaceregex, '-').toLowerCase()\r\n                    return SpaceReplaceResult;\r\n        \r\n                } else if (dashregex.test(name) && !spaceregex.test(name)) { \r\n                    const DashReplaceResult = name.replaceAll(dashregex, '~').toLowerCase()\r\n                    return DashReplaceResult\r\n        \r\n                } else if(dashregex.test(name) && spaceregex.test(name)) {\r\n                    const DashReplaceResult = name.replaceAll(dashregex, '~').toLowerCase()\r\n                    const ReplaceSpacesToo = DashReplaceResult.replaceAll(spaceregex, '-')\r\n                    return ReplaceSpacesToo\r\n                } else if (!dashregex.test(name) && !spaceregex.test(name)){\r\n                    return name.toLowerCase();\r\n                }\r\n            })\r\n            return name\r\n        }\r\n    },\r\n    SetItemSetImages: (ItemsOfSameSet) => {\r\n        if (ItemsOfSameSet) {\r\n            return ItemsOfSameSet.map((item, i) => {\r\n                const {images} = item;\r\n                const {featured, icon} = images;\r\n                if (icon) return icon\r\n                if (!icon) return featured\r\n            })\r\n        }\r\n    },\r\n    ReturnDaily: (data, type) => {\r\n        if (data) {\r\n            const {\r\n                dailyItemItemsNames,\r\n                dailyItemItemsRarity,\r\n                dailyItemItemsIDs,\r\n                dailyItemfinalPrices,\r\n                dailyItemBundleStatus,\r\n                dailyItemItemsImages\r\n            } = data;\r\n\r\n            if (type === 'names') return dailyItemItemsNames\r\n            if (type === 'rarities') return dailyItemItemsRarity\r\n            if (type === 'IDs') return dailyItemItemsIDs\r\n            if (type === 'prices') return dailyItemfinalPrices\r\n            if (type === 'bundlestatuses') return dailyItemBundleStatus\r\n            if (type === 'images') return dailyItemItemsImages\r\n        }\r\n    },\r\n    ReturnFeatured: (data, type) => {\r\n        if (data) {\r\n            const {\r\n                FeaturedItemItemsImages,\r\n                FeaturedItemBundleStatus, \r\n                FeaturedItemfinalPrices,\r\n                FeaturedItemItemsIDs,\r\n                FeaturedItemItemsRarity,\r\n                FeaturedItemItemsNames\r\n            } = data;\r\n\r\n            if (type === 'names') return FeaturedItemItemsNames\r\n            if (type === 'rarities') return FeaturedItemItemsRarity\r\n            if (type === 'IDs') return FeaturedItemItemsIDs\r\n            if (type === 'prices') return FeaturedItemfinalPrices\r\n            if (type === 'bundlestatuses') return FeaturedItemBundleStatus\r\n            if (type === 'images') return FeaturedItemItemsImages\r\n        }\r\n    }\r\n}\r\n\r\nexport default ItemFunctions;","D:\\React Projects\\FortniteShop\\src\\App Wide Functions\\FormatFunctions.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\Stats\\Stats.js",["212","213","214"],"import React from 'react'\r\nimport StatsContext from '../context/Stats Context/StatsContext'\r\nimport './Stats.css'\r\nimport {useContext, useEffect} from 'react'\r\nimport PSNIcon from '../../media/images/PSNicon.svg'\r\nimport XboxIcon from '../../media/images/XboxIcon.svg'\r\nimport EpicIcon from '../../media/images/EpicIcon.svg'\r\nimport {Link} from 'react-router-dom';\r\nimport {Helmet} from 'react-helmet';\r\nimport StatFunctions from '../../App Wide Functions/StatFunctions'\r\n\r\nconst Stats = () => {\r\n    const {\r\n        LOADING, \r\n        PLAYERSTATS,\r\n        ACCOUNTNAME,\r\n        ACCOUNTTYPE,\r\n        TIMEWINDOW,\r\n        GetPlayerStats,\r\n        setAccountName,\r\n        setTimeWindow,\r\n        setPlayerStats,\r\n        setAccountType\r\n    } = useContext(StatsContext);\r\n\r\n    const {setBackgroundType} = StatFunctions;\r\n    \r\n    useEffect(() => {\r\n        setTimeWindow(null);\r\n        setAccountName(null);\r\n        setAccountType(null)\r\n        setPlayerStats();\r\n    }, [])\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        setAccountName(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className='stats stats--primary'>\r\n            <Helmet><title>{`STATS LOOKUP EPIC/PSN/XB1 - FortniteBR`}</title></Helmet>\r\n            <h1 className='stats__head'>\r\n                LOOK UP YOUR STATS\r\n            </h1>\r\n            <p className='stats__text'>\r\n                PSN/XBOX Lookup does not work if you have an Epic account. You must search by Epic Name.\r\n            </p>\r\n            <form className='stats__form' onSubmit={onSubmit}>\r\n                <input className='stats__inputaccountname' onChange={onChange} placeholder='Enter your account name' />\r\n                <div className='timewindow timewindow--primary'>\r\n                    <span className='timewindow__text'>\r\n                        Select a timeframe\r\n                    </span>\r\n                    <div className='timewindowbuttons timewindowbuttons--primary'>\r\n                        <button style={setBackgroundType('season', TIMEWINDOW)} className='timewindowbuttons__button' type='button' onClick={() => {setTimeWindow('season')}}>SEASON</button>\r\n                        <button style={setBackgroundType('lifetime', TIMEWINDOW)} className='timewindowbuttons__button' type='button' onClick={() => {setTimeWindow('lifetime')}}>LIFETIME</button>\r\n                    </div>\r\n                </div>\r\n                <div className='platformbuttons platformbuttons--primary'>\r\n                    <Link to={`/stats/psn/${ACCOUNTNAME}`} className='stats__buttonlink'>\r\n                        <button className='platformbuttons__psn' type='submit' onClick={(event) => {\r\n                            if (TIMEWINDOW) setAccountType('psn'); GetPlayerStats(ACCOUNTNAME, ACCOUNTTYPE, TIMEWINDOW); \r\n                            if (!TIMEWINDOW) event.preventDefault();\r\n                        }}>\r\n                            <img className='platformbuttons__icon psnicon' src={PSNIcon} alt='Fornite Playstation search' />\r\n                        </button>\r\n                    </Link>\r\n                    <Link to={`/stats/epic/${ACCOUNTNAME}`} className='stats__buttonlink'>\r\n                        <button className='platformbuttons__epic' type='submit' onClick={(event) => {\r\n                            if (TIMEWINDOW) setAccountType('epic'); GetPlayerStats(ACCOUNTNAME, ACCOUNTTYPE, TIMEWINDOW); \r\n                            if (!TIMEWINDOW) event.preventDefault();\r\n                        }}>\r\n                            <img className='platformbuttons__icon epicicon' src={EpicIcon} alt='Fornite Playstation search' />\r\n                        </button>\r\n                    </Link>\r\n                    <Link to={`/stats/xbox/${ACCOUNTNAME}`} className='stats__buttonlink'>\r\n                        <button className='platformbuttons__xbox' type='submit' onClick={(event) => {\r\n                            if (TIMEWINDOW) setAccountType('xb1'); GetPlayerStats(ACCOUNTNAME, ACCOUNTTYPE, TIMEWINDOW); \r\n                            if (!TIMEWINDOW) event.preventDefault();\r\n                        }}>\r\n                            <img className='platformbuttons__icon xboxicon' src={XboxIcon} alt='Fornite Playstation search' />\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stats\r\n","D:\\React Projects\\FortniteShop\\src\\components\\context\\Stats Context\\StatsState.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\Stats Context\\StatsContext.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\Stats Context\\StatsReducer.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\Stats\\Stat\\PlayerStats.js",["215","216"],"import {useContext, useEffect} from 'react'\r\nimport StatFunctions from '../../../App Wide Functions/StatFunctions'\r\nimport StatsContext from '../../context/Stats Context/StatsContext'\r\nimport { SET_ACCOUNT_NAME } from '../../context/types'\r\nimport './PlayerStats.css'\r\nimport StatCategoryCard from './StatCategoryCard'\r\n\r\nconst PlayerStats = ({match}) => {\r\n\r\n    const {\r\n        LOADING, \r\n        PLAYERSTATS,\r\n        TIMEWINDOW,\r\n        GetPlayerStats,\r\n        setTimeWindow,\r\n        setAccountType,\r\n        setAccountName\r\n    } = useContext(StatsContext);\r\n    const {ReturnInfo, AccName, setBackgroundType} = StatFunctions;\r\n\r\n    useEffect(() => {\r\n        GetPlayerStats(match.params.username, match.params.platform, TIMEWINDOW)\r\n        setAccountName(match.params.username);\r\n        setAccountType(match.params.platform)\r\n    }, [])\r\n    const ReturnStats = (type) => {\r\n        if (PLAYERSTATS) {\r\n            const {overall, solo, duo, trio, squad, ltm} = PLAYERSTATS;\r\n            if (type === 'overall') return overall\r\n            if (type === 'solo') return solo\r\n            if (type === 'duo') return duo\r\n            if (type === 'trio') return trio\r\n            if (type === 'squad') return squad\r\n            if (type === 'ltm') return ltm\r\n            if (type === 'data') return PLAYERSTATS\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='playerstats playerstats--primary'>\r\n            <div className='playerstatsbuttons playerstatsbuttons--primary'>\r\n                <h1 className='playerstats__username'>\r\n                    {AccName(ReturnStats('data'))}\r\n                </h1>\r\n                <div className='timewindowbuttons timewindowbuttons--primary'>\r\n                    <button style={setBackgroundType('season', TIMEWINDOW)} className='timewindowbuttons__button' type='button' onClick={() => {\r\n                        setTimeWindow('season')\r\n                        GetPlayerStats(match.params.username, match.params.platform, 'season')\r\n                    }}>\r\n                        SEASON\r\n                    </button>\r\n                    <button style={setBackgroundType('lifetime', TIMEWINDOW)} className='timewindowbuttons__button' type='button' onClick={() => {\r\n                        setTimeWindow('lifetime')\r\n                        GetPlayerStats(match.params.username, match.params.platform, 'lifetime')\r\n                    }}>\r\n                        LIFETIME\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {LOADING ? 'HI' :\r\n                <div className='statssection statssection--primary'>\r\n                    <div className='overallstats overallstats--primary'>\r\n                        <h1 className='overallstats__head'>Overall Stats</h1>\r\n                        <div className='overallstatsheadsection'>\r\n                            <span className='overallstatsheadsection__headcategory'>\r\n                                OVERALL\r\n                            </span>\r\n                            <span className='overallstatsheadsection__headmatches'>\r\n\r\n                            </span>\r\n                        </div>\r\n                            \r\n                                {ReturnInfo(ReturnStats('overall'), 'winRate')}\r\n                            {ReturnInfo(ReturnStats('overall'), 'wins')}\r\n                            {ReturnInfo(ReturnStats('overall'), 'kd')}\r\n                            {ReturnInfo(ReturnStats('overall'), 'matches')}\r\n\r\n                    </div>\r\n                    <div className='statcards statcards--primary'>\r\n                        <StatCategoryCard StatsByType={ReturnStats('solo')} type={'SOLOS'} />\r\n                        <StatCategoryCard StatsByType={ReturnStats('duo')} type={'DUOS'} />\r\n                        <StatCategoryCard StatsByType={ReturnStats('squad')} type={'SQUADS'} />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerStats\r\n","D:\\React Projects\\FortniteShop\\src\\App Wide Functions\\StatFunctions.js",["217","218","219"],"const StatFunctions = {\r\n    ReturnInfo: (datatype, subtype) => {\r\n        if (datatype) {\r\n                const {\r\n                    deaths, kd, kills, killsPerMatch, killsPerMin,\r\n                    lastModified, matches, minutesPlayed, playersOutlived,\r\n                    score, scorePerMatch, scorePerMin, top3, top5, top6,\r\n                    top10, top12, top25, wins, winRate\r\n                } = datatype;\r\n\r\n                if (subtype === 'deaths') return deaths\r\n                if (subtype === 'kd') return kd\r\n                if (subtype === 'kills') return kills\r\n                if (subtype === 'killsPerMatch') return killsPerMatch.toFixed(2)\r\n                if (subtype === 'killsPerMin') return killsPerMin.toFixed(2)\r\n                if (subtype === 'lastModified') return lastModified\r\n                if (subtype === 'matches') return matches\r\n                if (subtype === 'minutesPlayed') return minutesPlayed\r\n                if (subtype === 'playersOutlived') return playersOutlived\r\n                if (subtype === 'score') return score\r\n                if (subtype === 'scorePerMatch') return scorePerMatch\r\n                if (subtype === 'scorePerMin') return scorePerMin\r\n                if (subtype === 'top3') return top3\r\n                if (subtype === 'top5') return top5\r\n                if (subtype === 'top6') return top6\r\n                if (subtype === 'top10') return top10\r\n                if (subtype === 'top12') return top12\r\n                if (subtype === 'top25') return top25\r\n                if (subtype === 'wins') return wins\r\n                if (subtype === 'winRate') return `${winRate.toFixed(2)}%`\r\n        }\r\n    },\r\n    AccName: (data) => {\r\n        if (data) {\r\n            const {name} = data;\r\n            return name;\r\n        }\r\n    },\r\n    setStatcardColor: (type) => {\r\n        if (type === 'SOLOS') return {background: '#f05454'}\r\n        if (type === 'DUOS') return {background: '#79d70f'}\r\n        if (type === 'TRIOS') return {background: '#f0a500'}\r\n        if (type === 'SQUADS') return {background: '#00bcd4'}\r\n    },\r\n    NumberFormatter: (number, type) => {\r\n        if (number) {\r\n            if (type) return Number(number).toFixed(2).toLocaleString('en')\r\n            if (!type) return Number(number).toLocaleString('en')\r\n        }\r\n        if (!number) return '-'\r\n    },\r\n    FormatDaysPlayed: (minutes) => {\r\n\r\n        const Days = (minutes/1440).toFixed(0)\r\n        const Hours = ((minutes / 60) % 24).toFixed(0)\r\n        const Minutes = (minutes % 60).toFixed(0)\r\n\r\n        if (Days !== NaN && Hours !== NaN && Minutes !== NaN) {\r\n            if (Days !== '0' && Minutes + 0.01 !== '0' && Hours !== '0' && Days !== 'NaN' && Minutes !== 'NaN' && Hours !== 'NaN') return (`${Days}D ${Hours}H ${Minutes === '0' ? 1 : Minutes}M`)\r\n            if (Days === '0' && Minutes !== '0' && Hours !== '0') return (`${Hours}H ${Minutes}M`)\r\n            if (Days === '0' && Minutes !== '0' && Hours === '0') return (`${Minutes}M`)\r\n        }\r\n        //eslint-disable-next-line\r\n    },\r\n    AvgMatchTime: (minutes, matches) => {\r\n        const AVGMinutes = (minutes / matches);\r\n        const AVGSeconds = (Number(`0.` + String(AVGMinutes).split(/\\./gi)[1])*60).toFixed(0)\r\n        \r\n        if (String(AVGMinutes)[0] !== '0') {\r\n            if (String(AVGMinutes) !== 'NaN' && AVGSeconds !== 'NaN') return `${AVGMinutes.toFixed(0)}M ${AVGSeconds}S`\r\n        } else if (String(AVGMinutes)[0] !== '0' && String(AVGMinutes) !== 'NaN') {\r\n            return `${AVGSeconds}S`\r\n        }\r\n    },\r\n    setBackgroundType: (windowSelected, TIMEWINDOW) => {\r\n        if (TIMEWINDOW === windowSelected) return {background: '#fdb827' ,transition: '1.25s'}\r\n    }\r\n}\r\n\r\nexport default StatFunctions","D:\\React Projects\\FortniteShop\\src\\components\\Stats\\Stat\\StatCategoryCard.js",["220","221"],"import React from 'react'\r\nimport StatFunctions from '../../../App Wide Functions/StatFunctions'\r\nimport './StatCategoryCard.css'\r\n\r\nconst StatCategoryCard = ({StatsByType, type}) => {\r\n    const {\r\n        ReturnInfo,\r\n        setStatcardColor,\r\n        NumberFormatter,\r\n        FormatDaysPlayed,\r\n        AvgMatchTime\r\n    } = StatFunctions;\r\n\r\n    return (\r\n        <div className='statcard statcard--primary'>\r\n            <div className='statcardheadsection' style={setStatcardColor(type)}>\r\n                <span className='statcardheadsection__category'>\r\n                    {type}\r\n                </span>\r\n                <span className='statcardheadsection__matches'>\r\n                    {NumberFormatter(ReturnInfo(StatsByType, 'matches')) || `-`} MATCHES\r\n                </span>\r\n            </div>\r\n            <div className='statdatasection statdatasection--primary'>\r\n                <div className='statgriddata statgriddata--primary'>\r\n                    <span className='statgriddata__head'>\r\n                        WINS\r\n                    </span>\r\n                    <span className='statgriddata__data'>\r\n                        {NumberFormatter(ReturnInfo(StatsByType, 'wins')) || `-`}\r\n                    </span>\r\n                </div>\r\n                <div className='statgriddata statgriddata--primary'>\r\n                    <span className='statgriddata__head'>\r\n                        WIN RATE\r\n                    </span>\r\n                    <span className='statgriddata__data'>\r\n                        {ReturnInfo(StatsByType, 'winRate') || `0.00%`}\r\n                    </span>\r\n                </div>\r\n                <div className='statgriddata statgriddata--primary'>\r\n                    <span className='statgriddata__head'>\r\n                        KILLS\r\n                    </span>\r\n                    <span className='statgriddata__data'>\r\n                        {NumberFormatter(ReturnInfo(StatsByType, 'kills')) || `-`}\r\n                    </span>\r\n                </div>\r\n                <div className='statgriddata statgriddata--primary'>\r\n                    <span className='statgriddata__head'>\r\n                        DEATHS\r\n                    </span>\r\n                    <span className='statgriddata__data'>\r\n                        {NumberFormatter(ReturnInfo(StatsByType, 'deaths')) || `-`}\r\n                    </span>\r\n                </div>\r\n                <div className='statgriddata statgriddata--primary'>\r\n                    <span className='statgriddata__head'>\r\n                        {type === 'SOLOS' && `TOP 10`}\r\n                        {type === 'DUOS' && `TOP 5`}\r\n                        {type === 'SQUADS' && `TOP 3`}\r\n                    </span>\r\n                    <span className='statgriddata__data'>\r\n                        {type === 'SOLOS' && NumberFormatter(ReturnInfo(StatsByType, 'top10'))}\r\n                        {type === 'DUOS' && NumberFormatter(ReturnInfo(StatsByType, 'top5'))}\r\n                        {type === 'SQUADS' && NumberFormatter(ReturnInfo(StatsByType, 'top3'))}\r\n                        {ReturnInfo(StatsByType, 'top10') === null ||\r\n                         ReturnInfo(StatsByType, 'top5') === null ||\r\n                         ReturnInfo(StatsByType, 'top3') === null &&\r\n                            '0'   \r\n                        }\r\n                    </span>\r\n                </div>\r\n                <div className='statgriddata statgriddata--primary'>\r\n                    <span className='statgriddata__head'>\r\n                        {type === 'SOLOS' && `TOP 25`}\r\n                        {type === 'DUOS' && `TOP 12`}\r\n                        {type === 'SQUADS' && `TOP 6`}\r\n                    </span>\r\n                    <span className='statgriddata__data'>\r\n                        {type === 'SOLOS' && NumberFormatter(ReturnInfo(StatsByType, 'top25'))}\r\n                        {type === 'DUOS' && NumberFormatter(ReturnInfo(StatsByType, 'top12'))}\r\n                        {type === 'SQUADS' && NumberFormatter(ReturnInfo(StatsByType, 'top6'))}\r\n                    </span>\r\n                </div>\r\n                <div className='statgriddata statgriddata--primary'>\r\n                    <span className='statgriddata__head'>\r\n                        TIME PLAYED\r\n                    </span>\r\n                    <span className='statgriddata__data'>\r\n                        {FormatDaysPlayed(ReturnInfo(StatsByType, 'minutesPlayed')) || `-`}\r\n                    </span>\r\n                </div>\r\n                <div className='statgriddata statgriddata--primary'>\r\n                    <span className='statgriddata__head'>\r\n                        AVG. MATCH TIME\r\n                    </span>\r\n                    <span className='statgriddata__data'>\r\n                        {AvgMatchTime(ReturnInfo(StatsByType, 'minutesPlayed'), ReturnInfo(StatsByType, 'matches')) || `-`}\r\n                    </span>\r\n                </div>\r\n                <div className='statgriddata statgriddata--primary'>\r\n                    <span className='statgriddata__head'>\r\n                        KILLS/MATCH\r\n                    </span>\r\n                    <span className='statgriddata__data'>\r\n                        {NumberFormatter(ReturnInfo(StatsByType, 'killsPerMatch'), 2) || `-`}\r\n                    </span>\r\n                </div>\r\n                <div className='statgriddata statgriddata--primary'>\r\n                    <span className='statgriddata__head'>\r\n                        KILLS/MINUTE\r\n                    </span>\r\n                    <span className='statgriddata__data'>\r\n                        {NumberFormatter(ReturnInfo(StatsByType, 'killsPerMin'), 2) || `-`}\r\n                    </span>\r\n                </div>\r\n                <div className='statgriddata statgriddata--primary'>\r\n                    <span className='statgriddata__head'>\r\n                        SCORE/MATCH\r\n                    </span>\r\n                    <span className='statgriddata__data'>\r\n                        {NumberFormatter(ReturnInfo(StatsByType, 'scorePerMatch'), 2) || `-`}\r\n                    </span>\r\n                </div>\r\n                <div className='statgriddata statgriddata--primary'>\r\n                    <span className='statgriddata__head'>\r\n                        SCORE/MINUTE\r\n                    </span>\r\n                    <span className='statgriddata__data'>\r\n                        {NumberFormatter(ReturnInfo(StatsByType, 'scorePerMin'), 2) || `-`}\r\n                    </span>\r\n                </div>\r\n                <div className='statgriddata statgriddata--primary'>\r\n                    <span className='statgriddata__head'>\r\n                        SCORE/MINUTE\r\n                    </span>\r\n                    <span className='statgriddata__data'>\r\n                        {NumberFormatter(ReturnInfo(StatsByType, 'score')) || `-`}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatCategoryCard\r\n","D:\\React Projects\\FortniteShop\\src\\components\\context\\NewsContext\\NewsState.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\NewsContext\\NewsContext.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\context\\NewsContext\\NewsReducer.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\News\\News.js",["222","223"],"D:\\React Projects\\FortniteShop\\src\\components\\News\\NewsSection\\NewsSection.js",["224"],"D:\\React Projects\\FortniteShop\\src\\App Wide Functions\\NewsFunctions.js",[],"D:\\React Projects\\FortniteShop\\src\\components\\News\\NewsSection\\NewsCard\\NewsCard.js",["225"],"import React from 'react'\r\nimport './NewsCard.css'\r\n\r\nconst NewsCard = ({title, image, tileImage, description}) => {\r\n    return (\r\n        <div className='newscard newscard--primary'>\r\n            <div className='newscardimagecont newscardimagecont--primary'>\r\n                <img className='newscardimagecont__image' src={image} />\r\n            </div>\r\n            <div className='newscarddetailscont newscarddetailscont--primary'>\r\n                <span className='newscarddetailscont__title'>{title}</span>\r\n                <span className='newscarddetailscont__description'>{description}</span>\r\n            </div>      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsCard\r\n",{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":3,"column":8,"nodeType":"232","messageId":"233","endLine":3,"endColumn":15},{"ruleId":"230","severity":1,"message":"234","line":20,"column":23,"nodeType":"232","messageId":"233","endLine":20,"endColumn":34},{"ruleId":"235","severity":1,"message":"236","line":39,"column":37,"nodeType":"237","endLine":39,"endColumn":108},{"ruleId":"235","severity":1,"message":"236","line":20,"column":33,"nodeType":"237","endLine":22,"endColumn":38},{"ruleId":"238","severity":1,"message":"239","line":51,"column":17,"nodeType":"237","endLine":53,"endColumn":20},{"ruleId":"230","severity":1,"message":"240","line":1,"column":46,"nodeType":"232","messageId":"233","endLine":1,"endColumn":62},{"ruleId":"235","severity":1,"message":"236","line":7,"column":9,"nodeType":"237","endLine":7,"endColumn":38},{"ruleId":"241","severity":1,"message":"242","line":25,"column":117,"nodeType":"243","messageId":"244","endLine":25,"endColumn":119},{"ruleId":"241","severity":1,"message":"242","line":33,"column":114,"nodeType":"243","messageId":"244","endLine":33,"endColumn":116},{"ruleId":"241","severity":1,"message":"242","line":24,"column":107,"nodeType":"243","messageId":"244","endLine":24,"endColumn":109},{"ruleId":"241","severity":1,"message":"242","line":33,"column":65,"nodeType":"243","messageId":"244","endLine":33,"endColumn":67},{"ruleId":"230","severity":1,"message":"245","line":34,"column":40,"nodeType":"232","messageId":"233","endLine":34,"endColumn":44},{"ruleId":"230","severity":1,"message":"246","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":19},{"ruleId":"230","severity":1,"message":"247","line":7,"column":8,"nodeType":"232","messageId":"233","endLine":7,"endColumn":23},{"ruleId":"230","severity":1,"message":"248","line":3,"column":8,"nodeType":"232","messageId":"233","endLine":3,"endColumn":21},{"ruleId":"230","severity":1,"message":"249","line":20,"column":32,"nodeType":"232","messageId":"233","endLine":20,"endColumn":34},{"ruleId":"235","severity":1,"message":"236","line":26,"column":41,"nodeType":"237","endLine":26,"endColumn":132},{"ruleId":"250","severity":1,"message":"251","line":12,"column":8,"nodeType":"252","endLine":12,"endColumn":10,"suggestions":"253"},{"ruleId":"235","severity":1,"message":"236","line":21,"column":25,"nodeType":"237","endLine":21,"endColumn":117},{"ruleId":"235","severity":1,"message":"236","line":26,"column":29,"nodeType":"237","endLine":26,"endColumn":82},{"ruleId":"235","severity":1,"message":"236","line":41,"column":45,"nodeType":"237","endLine":41,"endColumn":101},{"ruleId":"241","severity":1,"message":"242","line":88,"column":55,"nodeType":"243","messageId":"244","endLine":88,"endColumn":57},{"ruleId":"241","severity":1,"message":"242","line":114,"column":49,"nodeType":"243","messageId":"244","endLine":114,"endColumn":51},{"ruleId":"230","severity":1,"message":"254","line":14,"column":9,"nodeType":"232","messageId":"233","endLine":14,"endColumn":16},{"ruleId":"230","severity":1,"message":"255","line":15,"column":9,"nodeType":"232","messageId":"233","endLine":15,"endColumn":20},{"ruleId":"250","severity":1,"message":"256","line":33,"column":8,"nodeType":"252","endLine":33,"endColumn":10,"suggestions":"257"},{"ruleId":"230","severity":1,"message":"258","line":4,"column":10,"nodeType":"232","messageId":"233","endLine":4,"endColumn":26},{"ruleId":"250","severity":1,"message":"259","line":25,"column":8,"nodeType":"252","endLine":25,"endColumn":10,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":58,"column":13,"nodeType":"263","messageId":"264","endLine":58,"endColumn":25},{"ruleId":"261","severity":1,"message":"262","line":58,"column":29,"nodeType":"263","messageId":"264","endLine":58,"endColumn":42},{"ruleId":"261","severity":1,"message":"262","line":58,"column":46,"nodeType":"263","messageId":"264","endLine":58,"endColumn":61},{"ruleId":"265","severity":1,"message":"266","line":68,"column":67,"nodeType":"267","messageId":"268","endLine":68,"endColumn":69},{"ruleId":"265","severity":1,"message":"266","line":69,"column":67,"nodeType":"267","messageId":"268","endLine":69,"endColumn":69},{"ruleId":"250","severity":1,"message":"269","line":11,"column":8,"nodeType":"252","endLine":11,"endColumn":10,"suggestions":"270"},{"ruleId":"230","severity":1,"message":"254","line":13,"column":21,"nodeType":"232","messageId":"233","endLine":13,"endColumn":28},{"ruleId":"230","severity":1,"message":"271","line":8,"column":12,"nodeType":"232","messageId":"233","endLine":8,"endColumn":22},{"ruleId":"235","severity":1,"message":"236","line":8,"column":17,"nodeType":"237","endLine":8,"endColumn":73},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"no-unused-vars","'ItemSet' is defined but never used.","Identifier","unusedVar","'SetItemName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'RELOAD_COMPONENT' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'name' is assigned a value but never used.","'ShopHistory' is defined but never used.","'ItemShopHistory' is defined but never used.","'ItemFunctions' is defined but never used.","'id' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'BundleName', 'name', and 'price'. Either include them or remove the dependency array.","ArrayExpression",["274"],"'LOADING' is assigned a value but never used.","'PLAYERSTATS' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setAccountName', 'setAccountType', 'setPlayerStats', and 'setTimeWindow'. Either include them or remove the dependency array.",["275"],"'SET_ACCOUNT_NAME' is defined but never used.","React Hook useEffect has missing dependencies: 'GetPlayerStats', 'TIMEWINDOW', 'match.params.platform', 'match.params.username', 'setAccountName', and 'setAccountType'. Either include them or remove the dependency array.",["276"],"use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has a missing dependency: 'GetNews'. Either include it or remove the dependency array.",["277"],"'ReturnInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},"Update the dependencies array to be: [BundleName, name, price]",{"range":"286","text":"287"},"Update the dependencies array to be: [setAccountName, setAccountType, setPlayerStats, setTimeWindow]",{"range":"288","text":"289"},"Update the dependencies array to be: [GetPlayerStats, TIMEWINDOW, match.params.platform, match.params.username, setAccountName, setAccountType]",{"range":"290","text":"291"},"Update the dependencies array to be: [GetNews]",{"range":"292","text":"293"},[438,440],"[BundleName, name, price]",[978,980],"[setAccountName, setAccountType, setPlayerStats, setTimeWindow]",[846,848],"[GetPlayerStats, TIMEWINDOW, match.params.platform, match.params.username, setAccountName, setAccountType]",[325,327],"[GetNews]"]